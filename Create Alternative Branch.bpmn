<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test">
  <collaboration id="Collaboration">
    <participant id="create_branch" name="Create Branch" processRef="create_Alternate_Branch"></participant>
  </collaboration>
  <process id="create_Alternate_Branch" name="Create Alternate Branch" isExecutable="true">
    <laneSet id="laneSet_create_Alternate_Branch">
      <lane id="lane1">
        <flowNodeRef>startevent1</flowNodeRef>
        <flowNodeRef>scripttask1</flowNodeRef>
        <flowNodeRef>exclusivegateway1</flowNodeRef>
        <flowNodeRef>usertask1</flowNodeRef>
        <flowNodeRef>usertask2</flowNodeRef>
        <flowNodeRef>scripttask2</flowNodeRef>
        <flowNodeRef>endevent1</flowNodeRef>
        <flowNodeRef>usertask4</flowNodeRef>
        <flowNodeRef>exclusivegateway3</flowNodeRef>
        <flowNodeRef>endevent2</flowNodeRef>
        <flowNodeRef>scripttask4</flowNodeRef>
        <flowNodeRef>exclusivegateway4</flowNodeRef>
        <flowNodeRef>scripttask5</flowNodeRef>
        <flowNodeRef>exclusivegateway6</flowNodeRef>
        <flowNodeRef>usertask5</flowNodeRef>
        <flowNodeRef>usertask6</flowNodeRef>
        <flowNodeRef>usertask7</flowNodeRef>
        <flowNodeRef>usertask8</flowNodeRef>
        <flowNodeRef>usertask9</flowNodeRef>
        <flowNodeRef>scripttask7</flowNodeRef>
        <flowNodeRef>exclusivegateway7</flowNodeRef>
        <flowNodeRef>scripttask8</flowNodeRef>
        <flowNodeRef>scripttask9</flowNodeRef>
        <flowNodeRef>exclusivegateway8</flowNodeRef>
        <flowNodeRef>exclusivegateway9</flowNodeRef>
        <flowNodeRef>usertask10</flowNodeRef>
        <flowNodeRef>scripttask10</flowNodeRef>
        <flowNodeRef>exclusivegateway10</flowNodeRef>
        <flowNodeRef>endevent5</flowNodeRef>
        <flowNodeRef>usertask11</flowNodeRef>
        <flowNodeRef>exclusivegateway11</flowNodeRef>
        <flowNodeRef>scripttask11</flowNodeRef>
        <flowNodeRef>usertask12</flowNodeRef>
        <flowNodeRef>exclusivegateway12</flowNodeRef>
        <flowNodeRef>servicetask1</flowNodeRef>
        <flowNodeRef>parallelgateway1</flowNodeRef>
        <flowNodeRef>endevent7</flowNodeRef>
        <flowNodeRef>servicetask2</flowNodeRef>
      </lane>
    </laneSet>
    <startEvent id="startevent1" name="Start" activiti:initiator="startUser">
      <extensionElements>
        <activiti:formProperty id="applicationOwnerRoleTypeId" name="Please Enter &quot;applicationOwnerRoleTypeId&quot;" type="string" default="2379d4e8-7c52-492b-a170-84341ceed0ba " readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="applicationOwnerDelegateRoleTypeId" name="Please Enter &quot;applicationOwnerDelegateRoleTypeId&quot;" type="string" default="eb97c95a-ecb6-4843-86db-a5b81eaf3f65 " readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataExecutionPipielineAssetTypeId" name="Please Enter &quot;dataExecutionPipielineAssetTypeId &quot;" type="string" default="de93b8a7-10a2-43ed-9ac3-0b48e48f29c6" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="instanceDevelopmentDomainId" name="Please Enter &quot;instanceDevelopmentDomainId&quot;" type="string" default="26ba2a88-0e6e-4da4-8190-6c3901d2b5c8" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataInventoryCommunityName" name="Please Enter &quot;dataInventoryCommunityName&quot;" type="string" default="Data Inventory" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="environmentAttributTypeId" name="Please Enter &quot;environmentAttributTypeId&quot;" type="string" default="b31b1219-2266-4d28-9e97-9446d826fa4b" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="descriptionAttrId" name="please enter UUid of 'descriptionAttrTypeId'" type="string" default="00000000-0000-0000-0000-000000003114" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="consumableAttrId" name="please enter Uuid 'Consumable Attr Type Id'" type="string" default="9640bf36-2b4f-4b1a-a3ba-03f52e5f1466" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="publicationModeAttrId" name="please enter Uuid 'Publication Mode Attr Type Id'" type="string" default="95f5d934-a900-4fb9-bc07-7951371e8bf6" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaOffsetDaysAttrId" name="please enter 'slaOffsetDaysAttrTypeId'" type="string" default="205d5984-4a67-433c-b7a5-7f394c81ed15" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaArrivalTimeAttrId" name="please enter Uuid of 'SLA Arrival Time Attr Type Id'" type="string" default="cac39efb-ade1-484d-9b48-a374bfe2972b" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaCalenderAttrId" name="please enter Uuid of 'slaCalenderAttrTypeId'" type="string" default="3ce0a59e-7ad5-4799-bd5f-15821c5318f5" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="contactEmailAttrId" name="Please Enter &quot;contactEmailAttrTypeId&quot;" type="string" default="27595c98-199c-4e5f-bb67-498404765750" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingAssetTypeId" name="Please Enter &quot;dataOfferingAssetTypeId&quot;" type="string" default="f9a31319-eb7f-45df-a871-8bd55c9c51a2" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataSetContainsDataOfferingRelTypeId" name="Please Enter &quot;dataSetContainsDataOfferingRelTypeId&quot;" type="string" default="d24ef965-370b-41e0-8d2f-e26c969dc891" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="changeTicketAttrTypeId" name="Please Enter &quot;changeTicketAttrTypeId&quot;" type="string" default="b44d89c7-f6c3-414a-8917-ba8c28d90e4f" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingMilestoneByMilestoneFieldRelTypeId" name="Please Enter &quot;dataOfferingMilestoneByMilestoneFieldRelTypeId&quot;" type="string" default="6c2b1fdd-5856-44d1-83d7-7c3384d25e80" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="candidateStatusTypeId" name="Please Select &quot;candidateStatusTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000005008" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="epsProducerNameAttrTypeId" name="Please Enter &quot;epsProducerNameAttrTypeId&quot;" type="string" default="1fe65bc0-8e47-419b-b0f8-c0087251f78a" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="schemaDefinitionAttrTypeId" name="Please Enter &quot;schemaDefinitionAttrTypeId&quot;" type="string" default="73737e09-e4fa-4606-87b3-b30297a5a856" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="milestoneFieldAssetTypeId" name="Please Enter &quot;milestoneFieldAssetTypeId&quot;" type="string" default="0be2b975-ef68-4967-9608-369eade8bc49" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="epsProducerDomainId" name="Please Enter &quot;epsProducerDomainId&quot;" type="string" default="426a7110-8ee2-44c1-9810-7ddb5f624e83" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURIAttrTypeId" name="Please Enter &quot;storageResourceURIAttrTypeId&quot;" type="string" default="54d4120b-f05c-46cb-bc32-0b11188f9c8d" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageFormatAttrTypeId" name="Please Enter &quot;storageFormatAttrTypeId&quot;" type="string" default="b804b014-ae40-4b43-818a-e1d4aa3de563" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageCompressionAttrTypeId" name="Please Enter &quot;storageCompressionAttrTypeId&quot;" type="string" default="12933664-4d1a-4c40-b7d2-b60f0da628ea" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="awsAccountIdentifierAttrTypeId" name="Please Enter &quot;awsAccountIdentifierAttrTypeId&quot;" type="string" default="d09f9267-619e-460b-af45-6e50612d7a26" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="kmsARNAttrTypeId" name="Please Enter &quot;kmsARNAttrTypeId&quot;" type="string" default="c7b87e6a-101d-4131-8a9b-d83e3b947bfa" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="bucketARNAttrTypeId" name="Please Enter &quot;bucketARNAttrTypeId&quot;" type="string" default="1c74950e-24d1-40a9-a379-3d0ac60016de" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="bucketPrefixAttrTypeId" name="Please Enter &quot;bucketPrefixAttrTypeId&quot;" type="string" default="eef937af-e816-409e-819c-b1e9da50f627" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="bucketNameAttrTypeId" name="Please Enter &quot;bucketNameAttrTypeId&quot;" type="string" default="25d236cf-19c5-49e9-b2ce-b9997e1d77ff" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="awsRegionAttrTypeId" name="Please Enter &quot;awsRegionAttrTypeId&quot;" type="string" default="1daa8e4c-4365-4bc2-9bc9-76a5206e4ce8" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="authenticationTypeAttrTypeId" name="Please Enter &quot;authenticationTypeAttrTypeId&quot;" type="string" default="c8bfa665-e60d-4f8b-b56e-76b63082d525" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdAttrTypeId" name="Please Enter &quot;userIdAttrTypeId&quot;" type="string" default="1e72b971-002f-43ba-9486-56663bc82a6e" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordAttrTypeId" name="Please Enter &quot;userIdPasswordAttrTypeId&quot;" type="string" default="0dead660-76fc-4457-9adf-2faff2c1be47" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParametersAttrTypeId" name="Please Enter &quot;resourceParametersAttrTypeId&quot;" type="string" default="deeeee1f-5a19-4d44-8ebb-759e92fd6cba" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="awsDefaultProfileAttrTypeId" name="Please Enter &quot;awsDefaultProfileAttrTypeId&quot;" type="string" default="0d22b49f-5b90-4803-ada3-3f566fbfe201" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="customReaderClassAttrTypeId" name="Please Enter &quot;customReaderClassAttrTypeId&quot;" type="string" default="69958c0e-3b87-4a75-8cb1-5fbcab7e0044" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="customReaderParamsAttrTypeId" name="Please Enter &quot;customReaderParamsAttrTypeId&quot;" type="string" default="835054b1-20ff-4c10-8529-da74d57269c9" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="hadoopConfigLocAttrTypeId" name="Please Enter &quot;hadoopConfigLocAttrTypeId&quot;" type="string" default="1ca1adfd-bfa9-44bb-b27c-9be0c72a619b" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseDataIngestionStrategyAttrTypeId" name="Please Enter &quot;databaseDataIngestionStrategyAttrTypeId&quot;" type="string" default="9eb49b26-9e92-42c1-9914-41a54b554548" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fetchSizeAttrTypeId" name="Please Enter &quot;fetchSizeAttrTypeId&quot;" type="string" default="2f3881b8-7225-46fa-ab09-af530a676d13" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrievalQueryParametersAttrTypeId" name="Please Enter &quot;databaseDataRetrievalQueryParametersAttrTypeId&quot;" type="string" default="0ca0ebe4-2baa-4bcb-b9f8-cbc719d44902" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrivalPartitionAttrTypeId" name="Please Enter &quot;databaseDataRetrivalPartitionAttrTypeId&quot;" type="string" default="76a90705-5e40-44e1-8b76-c471be0a8aac" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileDelimiterAttrTypeId" name="Please Enter &quot;fileDelimiterAttrTypeId&quot;" type="string" default="dcdda23d-c7fd-4e83-827e-a5f033860cf3" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileFlagExtensionAttrTypeId" name="Please Enter &quot;fileFlagExtensionAttrTypeId&quot;" type="string" default="04af1e9e-f0f9-4233-a89d-b2e679a655d4" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="techStorageTemplateAssetTypeId" name="Please Enter &quot;techStorageTemplateAssetTypeId&quot;" type="string" default="b0a3f90f-a206-4cd5-9d7e-15d5ae809e9e" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fieldRuleAssetTypeId" name="Please Enter &quot;fieldRuleAssetTypeId&quot;" type="string" default="48d23f6f-077d-4965-86a9-e3f5059555bd" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storagePlatformAttrTypeId" name="Please Enter &quot;storagePlatformAttrTypeId &quot;" type="string" default="8cbc31a9-4460-4e54-baa3-03d699217fee" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingAccessibleThroughTechStorageTempRelTypeId" name="Please Enter &quot;dataOfferingAccessibleThroughTechStorageTempRelTypeId&quot;" type="string" default="0aea822c-2f92-4632-bb92-03293a64c198" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrievalQueryAttrTypeId" name="Please Enter &quot;databaseDataRetrievalQueryAttrTypeId&quot;" type="string" default="b1eeea0f-c533-4c38-bdac-c9c3eb5607d8" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="impalaConfigLocAttrTypeId" name="Please Enter &quot;impalaConfigLocAttrTypeId&quot; " type="string" default="7528a785-1b40-446e-83b9-06571186d444" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileAssetTypeId" name="Please Enter' File Asset Type Id'" type="string" default="00000000-0000-0000-0000-000000031304" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseAssetTypeId" name="Please Enter 'Database Asset Type Id'" type="string" default="77fb6b2e-38a0-40b1-be59-da9ae9013a60" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="s3AssetTypeId" name="Please Enter'S3 File System Asset Type Id'" type="string" default="00000000-0000-0000-0001-002400000000" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="hdfsAssetTypeId" name="Please Enter'Hadoop File System Type Id'" type="string" default="d0ea8065-f62a-439b-9483-b26efe454984" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="impalaAssetTypeId" name="Please enter'Impala asset Type Id'" type="string" default="cf469bc4-0e62-43db-9a61-a6318b18abc6" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="accessibleThroughFileRelTypeId" name="Please enter 'accessibleThroughFileRelTypeId'" type="string" default="40b4a9cc-8faa-4d26-bb16-f1c4dfd47bee" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="accessibleThroughDatabaseRelTypeId" name="Please enter 'accessibleThroughDatabaseRelTypeId'" type="string" default="3b592b92-4941-489b-bfe4-8f6f77970f44" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="accessibleThroughHDFSRelTypeId" name="Please enter 'accessibleThroughHDFSRelTypeId'" type="string" default="a300fb1c-4697-4ad0-b7f0-b5e6b58e1b52" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="accessibleThroughS3RelTypeId" name="Please enter 'accessibleThroughS3RelTypeId'" type="string" default="1592d0c6-11ab-4f78-a8e7-62f46e159562" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="accessibleThroughImpalaRelTypeId" name="Please enter 'accessibleThroughImpalaRelTypeId'" type="string" default="3f467154-1623-438c-84b6-b8d2d69c8e22" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileHeaderRowCountAttrTypeId" name="Please Enter &quot;fileHeaderRowCountAttrTypeId&quot;" type="string" default="075baad6-d05e-49d3-831f-991b7037caca" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileTrailerRecordCountAttrTypeId" name="Please Enter &quot;fileTrailerRecordCountAttrTypeId&quot;" type="string" default="855bbbad-c7d3-40c1-85ae-76266621380b" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="fileTrailerSchemaAttrTypeId" name="Please Enter &quot;fileTrailerSchemaAttrTypeId&quot;" type="string" default="aa1214a8-5f51-43df-8418-92c2664daf8a" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingGroupFieldsColumnRelTypeId" name="Please Enter &quot;dataOfferingGroupFieldsColumnRelTypeId&quot;" type="string" default="286fae84-2ccc-4e4b-ba2a-880484e1de61" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingGroupTableRelTypeId" name="Please Enter &quot;dataOfferingGroupTableRelTypeId&quot;" type="string" default="34a5ce80-73a7-487e-94ab-fc77249344db" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataSetContainsSchemaRelTypeId" name="Please Enter &quot;dataSetContainsSchemaRelTypeId&quot;" type="string" default="913b4d30-3295-4248-8eeb-c73c9041464d" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaCalendarDomainId" name="Please Enter &quot;slaCalendarDomainId&quot;" type="string" default="f69ccac6-a080-44d1-bc08-eec448cd6b71" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaOffsetDaysDomainId" name="Please Enter &quot;slaOffsetDaysDomainId&quot;" type="string" default="b3d3fc4f-c8c5-4c81-852b-d01c363947b2" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="slaArrivalTimeDomainId" name="Please Enter &quot;slaArrivalTimeDomainId&quot;" type="string" default="8610d2be-6490-4811-b665-1ae6893866cc" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="codeValueAssetTypeId" name="Please Enter &quot;codeValueAssetTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000021001" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="physicalDataDictionariesCommunityName" name="Please Enter &quot;physicalDataDictionariesCommunityName&quot;" type="string" default="Physical Data Dictionaries" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataOfferingGroupsSchemaRelTypeId" name="Please Enter &quot;dataOfferingGroupsSchemaRelTypeId&quot;" type="string" default="3d4e97f7-4c96-40b3-8150-8b2041e1bf99" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="columnPartOfTableRelTypeId" name="Please Enter &quot;columnPartOfTableRelTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000007042" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="schemaContainsTableRelTypeId" name="Please Enter &quot;schemaContainsTableRelTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000007043" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="avroSchemaAttrTypeId" name="Please Enter &quot;avroSchemaAttrTypeId&quot;" type="string" default="53bdeb27-8333-4dda-a20a-17f158a95e70" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="avroSchemaPrimaryKeyAttrTypeId" name="Please Enter &quot;avroSchemaPrimaryKeyAttrTypeId&quot;" type="string" default="a3138dea-815a-492f-a840-ebc744ee10ac" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="physicalDataDictionaryDomainTypeId" name="Please Enter &quot;physicalDataDictionaryDomainTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000030011" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="schemaAssetTypeId" name="Please Enter &quot;schemaAssetTypeId&quot;" type="string" default="00000000-0000-0000-0001-000400000002" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="codeValueTypeId" name="Please Enter &quot;codeValueTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000021001" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataSourceTypeAttrTypeId" name="Please Enter &quot;dataSourceTypeAttrTypeId&quot;" type="string" default="00000000-0000-0000-0001-000500000018" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataAssetUtilizePipelineRelTypeId" name="Please Enter &quot;dataAssetUtilizePipelineRelTypeId&quot;" type="string" default="81928df8-f0eb-414c-9a19-3883620fdc7e" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="schemaContainsTableRelTypeId" name="Enter &quot;schemaContainsTableRelTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000007043" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="tableContainsColumnRelTypeId" name="Enter &quot;tableContainsColumnRelTypeId&quot;" type="string" default="00000000-0000-0000-0000-000000007042" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="descopedName" name="Enter &quot;Desoped Name&quot;" type="string" default="Descoped" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="developmentName" name="Enter &quot;Development Name&quot;" type="string" default="Development" readable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageDomainTypeId" name="Please enter &quot;Technology Persistence Store Domain Type Id&quot;" type="string" default="17896289-3112-45dc-98ff-dda5ca4c5689" readable="false" required="true"></activiti:formProperty>
      </extensionElements>
    </startEvent>
    <scriptTask id="scripttask1" name="Validations" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.component.instance.AssetApi
import com.collibra.dgc.core.api.component.instance.CommunityApi
import com.collibra.dgc.core.api.component.instance.DomainApi
import com.collibra.dgc.core.api.component.meta.AttributeTypeApi
import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.PagedResponse
import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.dto.instance.community.FindCommunitiesRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest
import com.collibra.dgc.core.api.dto.instance.responsibility.FindResponsibilitiesRequest
import com.collibra.dgc.core.api.model.instance.Asset
import java.security.KeyStore.Entry.Attribute
import javax.management.relation.Relation


def findAssets(name, matchMode,statusIds,typeIds, domainId,communityId) {

	List<Asset> assets = new ArrayList<Asset>();
	FindAssetsRequest.Builder   builder         = new FindAssetsRequest().builder();
	Boolean moreToProcess                               = true;
	int offset                                          = 0;
	while(moreToProcess){
		builder
				.offset(offset)
				.limit(1000)
		PagedResponse<Asset> response  = assetApi.findAssets(builder.name(name).nameMatchMode(matchMode).typeIds(typeIds).domainId(domainId).statusIds(statusIds).communityId(communityId).build());
		assets.addAll(response.getResults());
		if(assets.size()==response.total){
			moreToProcess = false;
		}
		else
		{
			offset = assets.size();
		}
	}
	return assets;
}

// findAssets(name, matchMode,statusIds,typeIds, domainId,communityId)


def findResponsibilities(ownerIds, resourceIds,includeInherited, roleIds) {

	List<Attribute> responsibilities = new ArrayList<Attribute>();
	FindResponsibilitiesRequest.Builder builder = new FindResponsibilitiesRequest().builder();
	Boolean moreToProcess   = true;
	int offset  = 0;
	while(moreToProcess){
		builder
				.offset(offset)
				.limit(1000)
		PagedResponse<Attribute> response  = responsibilityApi.findResponsibilities(builder.ownerIds(ownerIds).resourceIds(resourceIds).includeInherited(includeInherited).roleIds(roleIds).build());
		responsibilities.addAll(response.getResults());
		if(responsibilities.size()==response.total){
			moreToProcess = false;
		}
		else
		{
			offset = responsibilities.size();
		}
	}
	return responsibilities;
}

//Method Name : findResponsibilities(ownerIds, resourceIds,includeInherited, roleIds)

def findAttributes(assetId, typeIds) {

	List<Attribute> attributes = new ArrayList<Attribute>();
	FindAttributesRequest.Builder builder = new FindAttributesRequest().builder();
	Boolean moreToProcess  = true;
	int offset = 0;
	while(moreToProcess){
		builder
				.offset(offset)
				.limit(1000)
		PagedResponse<Attribute> response  = attributeApi.findAttributes(builder.assetId(assetId).typeIds(typeIds).build());
		attributes.addAll(response.getResults());
		if(attributes.size()==response.total){
			moreToProcess = false;
		}
		else {
			offset = attributes.size();
		}
	}
	return attributes;
}

//Method Name : findAttributes(assetId, typeIds)


def findRelations(sourceId,relationTypeId,targetId) {

	List<Relation> relations = new ArrayList<Relation>();
	FindRelationsRequest.Builder   builder         = new FindRelationsRequest().builder();
	Boolean moreToProcess                               = true;
	int offset                                          = 0;
	while(moreToProcess){
		builder
				.offset(offset)
				.limit(1000)
		PagedResponse<Relation> response  =  relationApi.findRelations(builder.sourceId(sourceId).targetId(targetId).relationTypeId(relationTypeId).build());
		relations.addAll(response.getResults());
		if(relations.size()==response.total){
			moreToProcess = false;
		}
		else
		{
			offset = relations.size();
		}
	}
	return relations;
}

//Method Name : findRelations(sourceId,relationTypeId,targetId)



def validationMsg = ""


def doDomainId = domainApi.getDomain(string2Uuid(item.getVocabulary())).getId()
def roleIds = []
roleIds.add(string2Uuid(applicationOwnerRoleTypeId))
def roleIds1 = []
roleIds1.add(string2Uuid(applicationOwnerDelegateRoleTypeId))
def ownerIds = []
ownerIds.add(userApi.getCurrentUser().get().getId())
def resourceIds = []
resourceIds.add(doDomainId)

def responsibilityFound = false
def AODresponsibilityFound = false

def responsibilitiesAO = findResponsibilities(ownerIds, resourceIds,false, roleIds)
loggerApi.info('responsibilities---->'+responsibilitiesAO)

def responsibilitiesAOD = findResponsibilities(ownerIds, resourceIds,false, roleIds1)
loggerApi.info(' AOD responsibilities---->'+responsibilitiesAOD)


if(!responsibilitiesAO.isEmpty() || !responsibilitiesAOD.isEmpty()) {
	responsibilityFound = true
	
	
}
else {
	validationMsg += "<br><b><font color = 'red'>*AO/AOD is not the Start User </font></b><br>"
}
def doCommunityName = communityApi.getCommunity(string2Uuid(item.getCommunity())).getName()
def doCommunityId = communityApi.getCommunity(string2Uuid(item.getCommunity())).getId()
loggerApi.info('doCommunityName---->'+doCommunityName)
def designDOCommunityName
def designFound = false

if(doCommunityName.contains(dataInventoryCommunityName)) {
	designFound = true
}
else {
	validationMsg += "<br><b><font color = 'red'>*This Data Offering is not in 'Data Inventory' Community </font></b><br>"
}
def descopedStatusFound = false
def doStatus = assetApi.getAsset(string2Uuid(item.id)).getStatus().getName()
loggerApi.info('doStatus--->'+doStatus)

if(doStatus == descopedName) {
	descopedStatusFound = true
	validationMsg += "<br><b><font color = 'red'>* You are not authorised to clone this Offering as it is in Descoped Status  </font></b><br>"
	
}

def everestProducerValueTypes = []
everestProducerValueTypes.add(string2Uuid(dataExecutionPipielineAssetTypeId))
def listDevInstance = findAssets(null, null,null,everestProducerValueTypes, string2Uuid(instanceDevelopmentDomainId),null)
def instanceNameValuesMap = [:]
loggerApi.info("listDevInstance"+listDevInstance)

def nameOfOffering = item.getName()
loggerApi.info("nameOfOffering ======> "+nameOfOffering)

/*
 * def offeringInstance = nameOfOffering.split('_')[1]
 * loggerApi.info("offeringInstance ======> "+offeringInstance)
 */

def utilizePipelineRel =  findRelations(string2Uuid(item.id),string2Uuid(dataAssetUtilizePipelineRelTypeId),null)
loggerApi.info("utilizePipelineRel ========== > "+utilizePipelineRel)

def utilizePipelineRelTargetName = utilizePipelineRel.get(0).getTarget().getName()
loggerApi.info("utilizePipelineRelTargetId ========== > "+utilizePipelineRelTargetName)

envtypeIds =[]
envtypeIds.add(string2Uuid(environmentAttributTypeId))
for(instance in listDevInstance) {

	def envAttributes =	findAttributes(instance.getId(), envtypeIds)
			loggerApi.info('envAttributes---->'+envAttributes)
	if(!envAttributes.isEmpty())
	{
		if(envAttributes.get(0).getValue() == developmentName)
		{
		if(utilizePipelineRelTargetName!=instance.getName()) {
		instanceNameValuesMap.put(uuid2String(instance.getId()), instance.getName())
		}
			
		}
	}
}


def datasetFound=true

def presentOfferingHasDataSet=findRelations(null,string2Uuid(dataSetContainsDataOfferingRelTypeId),string2Uuid(item.id))
loggerApi.info("presentOfferingHasDataSet==>"+presentOfferingHasDataSet)

if(presentOfferingHasDataSet.isEmpty())
{
	datasetFound=false
	validationMsg += " Data set(s) is mandatory to Create Alternate Branch for Data Offering"
}

  loggerApi.info("instanceNameValuesMap ========> "+instanceNameValuesMap)
  
 execution.setVariable('instanceNameValuesMap',instanceNameValuesMap)
execution.setVariable('responsibilityFound',responsibilityFound)
execution.setVariable('designFound',designFound)
execution.setVariable('descopedStatusFound',descopedStatusFound)
execution.setVariable('datasetFound',datasetFound)

execution.setVariable('validationMsg',validationMsg)

execution.setVariable('doCommunityId',doCommunityId)

execution.setVariable('doCommunityName',doCommunityName)
]]></script>
    </scriptTask>
    <sequenceFlow id="flow1" sourceRef="startevent1" targetRef="scripttask1"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway1" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow2" sourceRef="scripttask1" targetRef="exclusivegateway1"></sequenceFlow>
    <userTask id="usertask1" name="Validation Failed" activiti:candidateUsers="user(${startUser})">
      <documentation>${validationMsg}</documentation>
    </userTask>
    <sequenceFlow id="flow3" sourceRef="exclusivegateway1" targetRef="usertask1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${responsibilityFound == false || designFound == false|| descopedStatusFound == true || datasetFound==false}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask2" name="Capture Execution Platform" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="instanceName" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Execution Platform &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; execution()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; executionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Choose a value to identify which environment you are cloning this Data Offering for.If left blank,then the selected Data Offering will be cloned as a Master Offering &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function execution() {var y = document.getElementsByClassName(&quot; schemaColor&quot;);var x = document.getElementsByClassName(&quot; executionHelpText&quot;);for (var i = 0;i &lt; x.length;i++) {if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="dynamicEnum" required="true">
          <activiti:value id="dynamicValuesExpression" name="${instanceNameValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="next" name="Next" type="button" default="false" readable="false" required="true"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow4" sourceRef="exclusivegateway1" targetRef="usertask2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${responsibilityFound == true && designFound == true && descopedStatusFound == false && datasetFound==true}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask2" name="Clone Data Offering Name" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest

def findAssetsByName = { name, domainId, MatchMode ->
	assetApi.findAssets(
		FindAssetsRequest.builder()
		.name(name)
		.domainId(domainId)
		.nameMatchMode(MatchMode)
		.build()
		).getResults()
}

def findRelationBySourceAndTarget = { sourceId, relationTypeId, targetId ->
	relationApi.findRelations(FindRelationsRequest.builder()
		.sourceId(sourceId)
		.relationTypeId(relationTypeId)
		.targetId(targetId)
		.build()
		).getResults()
}


def doName = item.getName()
def doId = itemV2.id
loggerApi.info("doId ============="+doId)
loggerApi.info('doName--->'+doName)

def dataoffering
def dataofferingName

if(doName.contains('_'))
{
	dataoffering = doName.split('_')[0]
}
else
{
	dataoffering = doName
}

loggerApi.info('dataoffering--->'+dataoffering)

if(instanceNameValuesMap.get(instanceName) == "Humming Bird")
{
	dataofferingName = dataoffering
}
else
{
	dataofferingName = dataoffering+"_"+instanceNameValuesMap.get(instanceName)
}

loggerApi.info('dataofferingName--->'+dataofferingName)

def dataOfferingFound = false

def instanceAssets = findAssets(instanceName, MatchMode.EXACT,null,null,  string2Uuid(instanceDevelopmentDomainId),null)
loggerApi.info("instanceAssets"+instanceAssets)
	
if(!instanceAssets.isEmpty()) {
	def availableOnRel = findRelations(string2Uuid(item.id),string2Uuid(dataExecutionPipielineAssetTypeId),instanceAssets.get(0).getId())
loggerApi.info("availableOnRel"+availableOnRel)
					
}

def domainAssets = findAssets(dataofferingName, MatchMode.EXACT,null,null, string2Uuid(item.getVocabulary()),null)
if(!domainAssets.isEmpty()) {
 dataOfferingFound = true
}


execution.setVariable('dataOfferingFound',dataOfferingFound)
execution.setVariable('dataofferingName',dataofferingName)
execution.setVariable('doId',doId)]]></script>
    </scriptTask>
    <sequenceFlow id="flow5" sourceRef="usertask2" targetRef="scripttask2"></sequenceFlow>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="flow6" sourceRef="usertask1" targetRef="endevent1"></sequenceFlow>
    <userTask id="usertask4" name="Data Offering Metadata" activiti:candidateUsers="user(${startUser})">
      <documentation>${validationMsg}</documentation>
      <extensionElements>
        <activiti:formProperty id="name" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataOfferingColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;dataOffering()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataOfferingHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Data Offering Name &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function dataOffering(){var y = document.getElementById(&quot;dataOfferingColor&quot;);var x=document.getElementById(&quot;dataOfferingHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${item.getName()}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="namePrefix" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name Prefix &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;namePrefixColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;namePrefix()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;namePrefixHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Name Prefix Of Data Set &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function namePrefix(){var y = document.getElementById(&quot;namePrefixColor&quot;);var x=document.getElementById(&quot;namePrefixHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="term" default="${epsProducerId}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="description" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Description &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;descriptionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;description()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;descriptionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Description &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function description(){var y = document.getElementById(&quot;descriptionColor&quot;);var x=document.getElementById(&quot;descriptionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="plainText" default="${attrList.Description}" required="true"></activiti:formProperty>
        <activiti:formProperty id="consumable" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Consumable &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;consumableColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;consumable()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;consumableHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Select either True or False &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function consumable(){var y = document.getElementById(&quot;consumableColor&quot;);var x=document.getElementById(&quot;consumableHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="boolean" default="${attrList.Consumable}" required="true">
          <activiti:value id="True" name="True"></activiti:value>
          <activiti:value id="False" name="False"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="publicationMode" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Publication Mode &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;publicationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;publication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;publicationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Select Mode type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function publication(){var y = document.getElementById(&quot;publicationColor&quot;);var x=document.getElementById(&quot;publicationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${attrList.PublicationMode}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${publicationModeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="contacteMail" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Contact Email &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;contactMailColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;contactMail()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;contactMailHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Contact E-Mail &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function contactMail(){var y = document.getElementById(&quot;contactMailColor&quot;);var x=document.getElementById(&quot;contactMailHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${attrList.ContactEmail}" required="true"></activiti:formProperty>
        <activiti:formProperty id="instanceName" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Execution Platform &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;instanceNameColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;instanceName()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;instanceNameHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Select Execution Platform &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function instanceName(){var y = document.getElementById(&quot;instanceNameColor&quot;);var x=document.getElementById(&quot;instanceNameHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" writable="false">
          <activiti:value id="dynamicValuesExpression" name="${instanceNameValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="slaCalender" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Service Level Agreement - Calendar &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaCalendarColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;slaCalendar()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaCalendarHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Select which day you want &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function slaCalendar(){var y = document.getElementById(&quot;slaCalendarColor&quot;);var x=document.getElementById(&quot;slaCalendarHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="term" default="${slaCalendarId}" required="true">
          <activiti:value id="proposedValues" name="${slaCalendarList}"></activiti:value>
          <activiti:value id="proposedFixed" name="true"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="slaArrivalTime" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Service Level Agreement - Arrival Time &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaArrivalColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;slaArrival()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaArrivalHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Arrival Time &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function slaArrival(){var y = document.getElementById(&quot;slaArrivalColor&quot;);var x=document.getElementById(&quot;slaArrivalHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="term" default="${slaArrivalTimeId}" required="true">
          <activiti:value id="proposedValues" name="${slaArrivalTimeList}"></activiti:value>
          <activiti:value id="proposedFixed" name="true"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="slaOffsetDays" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Service Level Agreement - Offset Days &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaOffsetColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;slaOffset()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;slaOffsetHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide how many offset days &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function slaOffset(){var y = document.getElementById(&quot;slaOffsetColor&quot;);var x=document.getElementById(&quot;slaOffsetHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="term" default="${slaOffsetDaysId}" required="true">
          <activiti:value id="helpText" name="&lt;b&gt;Only Numeric Values are allowed&lt;/b&gt;"></activiti:value>
          <activiti:value id="proposedValues" name="${slaOffsetDaysList}"></activiti:value>
          <activiti:value id="proposedFixed" name="true"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="mileStoneByMilestoneField" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Milestone By Milestone Field &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;milestoneColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;milestone()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;milestoneHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Select Milestone Field Milestone of Data Offering  &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function milestone(){var y = document.getElementById(&quot;milestoneColor&quot;);var x=document.getElementById(&quot;milestoneHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="term" default="${relationLists[0]}">
          <activiti:value id="conceptType" name="0be2b975-ef68-4967-9608-369eade8bc49"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="selectedSchemaList" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Schema &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; schema()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Select Schema(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function schema() {var y = document.getElementsByClassName(&quot; schemaColor&quot;);var x = document.getElementsByClassName(&quot; schemaHelpText&quot;);for(var i=0;i&lt;x.length;i++){if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="term" default="${dataOfferingSchemasTargets}">
          <activiti:value id="multiValue" name="true"></activiti:value>
          <activiti:value id="proposedValues" name="${notDescopedSchemas}"></activiti:value>
          <activiti:value id="proposedFixed" name="true"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="schemaName" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Avro Schema Name &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;avroSchemaName&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;avroSchemaName()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;avroSchemaNameHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Please Provide Avro Schema Name &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function avroSchemaName() {var y = document.getElementsByClassName(&quot;avroSchemaName&quot;);var x = document.getElementsByClassName(&quot;avroSchemaNameHelpText&quot;);for (var i = 0;i &lt; x.length;i++) {if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="string"></activiti:formProperty>
        <activiti:formProperty id="schemaDefinition" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Avro Schema Definition &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaDefColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; schemaDef()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaDefHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Schema Definition &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function schemaDef() {var y = document.getElementsByClassName(&quot; schemaDefColor&quot;);var x = document.getElementsByClassName(&quot; schemaDefHelpText&quot;);for(var i=0;i&lt;x.length;i++){if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="plainText"></activiti:formProperty>
        <activiti:formProperty id="primaryKeys" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt;Avro Primary Keys &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; primaryKeysColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; primaryKeys()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; primaryKeysHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Primary Keys &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function primaryKeys() {var y = document.getElementsByClassName(&quot; primaryKeysColor&quot;);var x = document.getElementsByClassName(&quot; primaryKeysHelpText&quot;);for(var i=0;i&lt;x.length;i++){if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="plainText"></activiti:formProperty>
        <activiti:formProperty id="alternateSchemaLocation" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Alternate Schema Location &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; entityURIColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; entityURI()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; entityURIHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;URL of Alternative Model Registery when Databook Firmwide Model registry is not being used &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function entityURI() {var y = document.getElementsByClassName(&quot; entityURIColor&quot;);var x = document.getElementsByClassName(&quot; entityURIHelpText&quot;);for(var i=0;i&lt;x.length;i++){if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="string"></activiti:formProperty>
        <activiti:formProperty id="selectAllTablesAndColumns" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Do you want to select all tables and columns? &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;selectAllTables&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;selectAllTables()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;selectAllTablesHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Please Select Yes or No &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function selectAllTables() {var y = document.getElementsByClassName(&quot;selectAllTables&quot;);var x = document.getElementsByClassName(&quot;selectAllTablesHelpText&quot;);for (var i = 0;i &lt; x.length;i++) {if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="enum" default="none">
          <activiti:value id="Yes" name="Yes"></activiti:value>
          <activiti:value id="No" name="No"></activiti:value>
          <activiti:value id="none" name="-"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="storagePlatform" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Select Technology Storage Platform &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;selectTechColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;selectTech()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;selectTechHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Select Storage Platform &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function selectTech() {var y = document.getElementsByClassName(&quot;selectTechColor&quot;);var x = document.getElementsByClassName(&quot;selectTechHelpText&quot;);for (var i = 0;i &lt; x.length;i++) {if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;storagePlatform&quot;).length;i++) {var x = document.getElementsByName(&quot;storagePlatform&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-splatform-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-splatform-modal {margin-left: -45% !important;width: 90% !important;min-height: 100px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="term" required="true">
          <activiti:value id="proposedFixed" name="true"></activiti:value>
          <activiti:value id="proposedValues" name="${storageTarget}"></activiti:value>
          <activiti:value id="multiValue" name="true"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="alternateStoragePlatform" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt;Alternate Storage Platform&lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; schemaColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot; alternate()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot; alternateStoragePlatformHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Select Alternate Storage Plateform &lt;/p&gt;&lt;/div&gt;&lt;script&gt; function alternate() {var y = document.getElementsByClassName(&quot; schemaColor&quot;);var x = document.getElementsByClassName(&quot; alternateStoragePlatformHelpText&quot;);for(var i=0;i&lt;x.length;i++){if (x[i].style.display === &quot;none&quot;) {x[i].style.display = &quot;block&quot;;y[i].style.color = '#008902';}else {x[i].style.display = &quot;none&quot;;y[i].style.color = '#8C8C8C';}}}&lt;/script&gt;" type="dynamicEnum">
          <activiti:value id="dynamicValuesExpression" name="${storagePlatformValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="submit" name="Next" type="button" default="false"></activiti:formProperty>
        <activiti:formProperty id="cancel" name="Cancel" type="button" default="false"></activiti:formProperty>
        <activiti:formProperty id="createStorage" name="Create Storage" type="button"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="exclusivegateway3" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow11" sourceRef="usertask4" targetRef="exclusivegateway3"></sequenceFlow>
    <endEvent id="endevent2" name="End"></endEvent>
    <sequenceFlow id="flow12" sourceRef="exclusivegateway3" targetRef="endevent2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${cancel}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask4" name="Validations" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.component.instance.DomainApi
import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.component.instance.CommunityApi
import com.collibra.dgc.core.api.dto.instance.domain.FindDomainsRequest
import com.collibra.dgc.core.api.dto.instance.community.FindCommunitiesRequest

def findSchemaName(communityId, schemaName) {
return phyDataDicDomain = domainApi.findDomains(
FindDomainsRequest.builder()
.name(schemaName)
.nameMatchMode(MatchMode.ANYWHERE)
.communityId(communityId)
.build()
).getResults()
}



def validationMsg = ""

def desc = description.toString().replace("&nbsp;"," ")
def replaceHtml = desc.replaceAll("\\<.*?\\>", "")

loggerApi.info('description.toString().trim()---'+replaceHtml)
if(replaceHtml.trim().isEmpty()) {
validationMsg += "<br><b><font color = 'red'>* Description cannot be null, Please provide proper description </font></b><br>"
}


def parentCommunityId = communityApi.getCommunity(string2Uuid(item.getCommunity())).getParent().getId()
loggerApi.info('parent community --->'+parentCommunityId)

def phyDataDicComm = communityApi.findCommunities(
FindCommunitiesRequest.builder()
.name(physicalDataDictionariesCommunityName)
.nameMatchMode(MatchMode.ANYWHERE)
.parentId(parentCommunityId)
.build()
).getResults()

loggerApi.info('phyDataDicComm --->'+phyDataDicComm)

def dataOfferingDomain = domainApi.getDomain(string2Uuid(item.getVocabulary())).getName()
def dataOfferingDomainSealId = dataOfferingDomain.split('-')[0]



if(!schemaName.isEmpty())
{
def phyDataDicDomain = findSchemaName(phyDataDicComm.get(0).getId(), dataOfferingDomainSealId + "- "+ schemaName.trim().toLowerCase().replaceAll("\\s+", " ").split(" ").collect{it.capitalize()}.join(" "))


if(!phyDataDicDomain.isEmpty())
{
validationMsg += "<br><b> <font color='red'>* Avro schema name alreay exists. " +phyDataDicDomain[0].getName()+ "</font></b></br>"

}
}


if(!alternateSchemaLocation.isEmpty())
{
def alternatePhyDataDicDomain = findSchemaName(phyDataDicComm.get(0).getId(), dataOfferingDomainSealId + "- "+ alternateSchemaLocation.trim().toLowerCase().replaceAll("\\s+", " ").split(" ").collect{it.capitalize()}.join(" "))

if(!alternatePhyDataDicDomain.isEmpty())
{
validationMsg += "<br><b> <font color='red'>* Alternate schema location alreay exists. " +alternatePhyDataDicDomain[0].getName()+ "</font></b></br>"

}
}



if(selectedSchemaList.isEmpty() && schemaName.isEmpty() && alternateSchemaLocation.isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Please provide schema or schemaName or Alternate Schema Location </font></b></br>"
}


if(!schemaName.isEmpty() && schemaDefinition.toString().isEmpty() && primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Schema definiton and Avro Primary key is mandatory </font></b></br>"
} else if(schemaName.isEmpty() && !schemaDefinition.toString().isEmpty() && primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Schema Name and Avro Primary key is mandatory </font></b></br>"
} else if(schemaName.isEmpty() && schemaDefinition.toString().isEmpty() && !primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Schema Name and Avro Schema definiton is mandatory </font></b></br>"
} else if(!schemaName.isEmpty() && !schemaDefinition.toString().isEmpty() && primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Primary key is mandatory </font></b></br>"
} else if(schemaName.isEmpty() && !schemaDefinition.toString().isEmpty() && !primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Schema is mandatory </font></b></br>"
} else if(!schemaName.isEmpty() && schemaDefinition.toString().isEmpty() && !primaryKeys.toString().isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Avro Schema Definition mandatory </font></b></br>"
}


/*
*
*
*
*
* if(!selectedSchemaList.isEmpty() && selectTablesList.toString().isEmpty() &&
* selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> Tables and columns are mandatory </font></b></br>"
* } else if(selectedSchemaList.isEmpty() &&
* !selectTablesList.toString().isEmpty() &&
* selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> Schema and columns are mandatory </font></b></br>"
* } else if(selectedSchemaList.isEmpty() &&
* selectTablesList.toString().isEmpty() &&
* !selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> Schema and tables are mandatory </font></b></br>"
* } else if(!selectedSchemaList.isEmpty() &&
* !selectTablesList.toString().isEmpty() &&
* selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> columns are mandatory </font></b></br>" } else
* if(!selectedSchemaList.isEmpty() && selectTablesList.toString().isEmpty() &&
* !selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> tables are mandatory </font></b></br>" } else
* if(selectedSchemaList.isEmpty() && !selectTablesList.toString().isEmpty() &&
* !selectColumnList.toString().isEmpty()) { validationMsg +=
"<br><b> <font color='red'> Schemas are mandatory </font></b></br>" }
*
* def listOfSchemas = utility.toList(selectedSchemaList)
*
* def selectedSchemaList1 = listOfSchemas.join(".")
*
* loggerApi.info("selectedSchemaList =========> "+selectedSchemaList1 )
*
* loggerApi.info("listOfSchemas =========> "+listOfSchemas )
*
* for(list in listOfSchemas) { loggerApi.info("list =========> "+list)
*
*
* } loggerApi.info("selectedSchemaList =========> "+selectedSchemaList)
*
*/

if(submit == true && storagePlatform.isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Please select technology storage platform </font></b></br>"
}


if(!schemaName.isEmpty() && !alternateSchemaLocation.isEmpty()) {
if(schemaName.trim().toLowerCase().replaceAll("\\s+", " ") == alternateSchemaLocation.trim().toLowerCase().replaceAll("\\s+", " ")) {
validationMsg += "<br><b> <font color='red'>* Same name entered in Schema Name and Alternate Schema Location </font></b></br>"
}
}

if(createStorage==true && alternateStoragePlatform.isEmpty()) {
validationMsg += "<br><b> <font color='red'>* Please select Alternate technology storage platform </font></b></br>"
}

/*validation for select all tables and columns*/
def schemas = utility.toList(selectedSchemaList)
def avroTypeIds=[]
avroTypeIds.add(string2Uuid(dataSourceTypeAttrTypeId))

def validateNormalSchema = false
def avroSchemaAttr
def avroList = []
for(schema in schemas) {
avroSchemaAttr=attributeApi.findAttributes(FindAttributesRequest.builder()
.typeIds(avroTypeIds)
.assetId(string2Uuid(schema))
.build()
).getResults()

if(!avroSchemaAttr.isEmpty()) {
if(avroSchemaAttr.get(0).getValue() == "Avro") {
avroList.add(schema)
} else {
validateNormalSchema = true
}
}
}

if(validateNormalSchema) {
loggerApi.info("selectAllTablesAndColumns==>"+selectAllTablesAndColumns)
if(selectAllTablesAndColumns == "none") {
validationMsg += "<br><b> <font color='red'>* Please select all tables and columns </font></b></br>"
}
}

def addDot = selectedSchemaList.split(",")
def listArraySchema = []
if(addDot.size() == 0) {
//listArraySchema.add("\"${selectedSchemaList}\"")
listArraySchema.add(selectedSchemaList)
}
for(li in addDot) {
loggerApi.info("lilililili==="+"\"${li}\"")
//listArraySchema.add("\"${li}\"")
//def a1 = uuid2String(li)
listArraySchema.add(li)
}

loggerApi.info("listArraySchema.join('.') ===========> "+listArraySchema.join('.'))
execution.setVariable('selectedSchemaToList',listArraySchema.join('.'))

execution.setVariable('avroList',avroList)
execution.setVariable('validateNormalSchema',validateNormalSchema)


execution.setVariable('validationMsg',validationMsg)]]></script>
    </scriptTask>
    <sequenceFlow id="flow13" sourceRef="parallelgateway1" targetRef="scripttask4"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway4" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow14" sourceRef="scripttask4" targetRef="exclusivegateway4"></sequenceFlow>
    <sequenceFlow id="flow15" sourceRef="exclusivegateway4" targetRef="usertask4">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg!=""}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask5" name="Find Technology Storage Platform Metadata and Create data offering" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.component.instance.CommunityApi
import com.collibra.dgc.core.api.component.instance.DomainApi
import com.collibra.dgc.core.api.component.logger.LoggerApi
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest
import com.collibra.dgc.core.api.dto.instance.asset.ChangeAssetRequest
import com.collibra.dgc.core.api.dto.instance.attribute.AddAttributeRequest
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.dto.instance.community.FindCommunitiesRequest
import com.collibra.dgc.core.api.dto.instance.relation.AddRelationRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest
import com.collibra.dgc.core.api.component.instance.AssetApi
import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.domain.AddDomainRequest
import com.collibra.dgc.core.api.dto.instance.domain.FindDomainsRequest
import com.collibra.dgc.core.api.component.meta.AttributeTypeApi


def storageFormatValuesMap = [:]

def storageFormatAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(storageFormatAttrTypeId)).getAllowedValues()

for(storageFormatAllowedValue in storageFormatAllowedValues) {
	storageFormatValuesMap.put(storageFormatAllowedValue, storageFormatAllowedValue)
}

def storageCompressionValuesMap = [:]

def storageCompressionAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(storageCompressionAttrTypeId)).getAllowedValues()

for(storageCompressionAllowedValue in storageCompressionAllowedValues) {
	storageCompressionValuesMap.put(storageCompressionAllowedValue, storageCompressionAllowedValue)
}

def AuthenticationTypeValuesMap = [:]

def AuthenticationTypeAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(authenticationTypeAttrTypeId)).getAllowedValues()

for(AuthenticationTypeAllowedValue in AuthenticationTypeAllowedValues) {
	AuthenticationTypeValuesMap.put(AuthenticationTypeAllowedValue, AuthenticationTypeAllowedValue)
}

/*def storagePlatformValuesMap = [:]

def storagePlatformAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(storagePlatformAttrTypeId)).getAllowedValues()

for(storagePlatformAllowedValue in storagePlatformAllowedValues) {
	storagePlatformValuesMap.put(storagePlatformAllowedValue, storagePlatformAllowedValue)
}*/



def databaseIngValuesMap = [:]

def databaseIngAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(databaseDataIngestionStrategyAttrTypeId)).getAllowedValues()

for(databaseIngAllowedValue in databaseIngAllowedValues) {
	databaseIngValuesMap.put(databaseIngAllowedValue, databaseIngAllowedValue)
}

execution.setVariable('AuthenticationTypeValuesMap',AuthenticationTypeValuesMap)
execution.setVariable('storageFormatValuesMap',storageFormatValuesMap)
execution.setVariable('storageCompressionValuesMap',storageCompressionValuesMap)
//execution.setVariable('storagePlatformValuesMap',storagePlatformValuesMap)
execution.setVariable('databaseIngValuesMap',databaseIngValuesMap)





/*def storageTarget = []
def storageRelIds = [
	accessibleThroughFileRelTypeId,
	accessibleThroughDatabaseRelTypeId,
	accessibleThroughHDFSRelTypeId,
	accessibleThroughS3RelTypeId,
	accessibleThroughImpalaRelTypeId
]
def storageRel
def storageName
String storageLastName
def techstorageName
def storageAttrList = [:]

//finding Storage Platform Assets from Data Offering Relation

for(i = 0; i <storageRelIds.size(); i++)
{
	storageRel = relationApi.findRelations(
			FindRelationsRequest.builder()
			.sourceId(string2Uuid(item.id))
			.relationTypeId(string2Uuid(storageRelIds[i]))
			.build()
			).getResults()


	if(!storageRel.isEmpty())
	{
		for(eachstorage in storageRel)
		{
			storageTarget.add(eachstorage.getTarget().getId())

		}


		loggerApi.info('storageRel-->'+storageRel)
		loggerApi.info('storageTarget-->'+storageTarget)

		def storageId = storageTarget[0]
		for(eachTarget in storageTarget)
		{
			storageName = assetApi.getAsset(eachTarget).getDisplayName()
		}
		loggerApi.info('storageId--->'+storageId)

		storageLastName = storageName.substring(storageName.lastIndexOf(" ")+1);

		loggerApi.info('storageLastName--->'+storageLastName)*/
def techstorageName
def storageAttrList = [:]

		def storageAttr = attributeApi.findAttributes(
				FindAttributesRequest.builder()
				.assetId(string2Uuid(storagePlatform))
				.limit(50)
				.offset(0)
				.build()
				).getResults()

		loggerApi.info('storageAttr-->'+storageAttr)

		for(eachAttr in storageAttr){
			loggerApi.info(eachAttr.getType().getName().toString());

			if(eachAttr.getValue() != "") {
				loggerApi.info(eachAttr.getType().getName().toString().replace(" ","").replace("-", "") + "="+eachAttr.getValue().toString());
				storageAttrList.put(eachAttr.getType().getName().toString().replace(" ","").replace("-", "").replace("(", "").replace(")", ""),eachAttr.getValue().toString().replace(".0", "").replace("[", "").replace("]", "").replaceAll("<[^>]*>", ""));
			}
			else {
				storageAttrList.put(eachAttr.getType().getName().toString().replace(" ","").replace("-", "").replace("(", "").replace(")", ""), null)
			}
		}

		loggerApi.info('storageAttrList--->'+storageAttrList)

	 //techstorageName = name + " " + storageLastName
	 
	 def storageName = assetApi.getAsset(string2Uuid(storagePlatform)).getDisplayName()
	 def storageLastName = storageName.substring(storageName.lastIndexOf(" ")+1);
	 
	 loggerApi.info('storageLastName--->'+storageLastName)
	 
	 
	 techstorageName = dataofferingName + " " + storageLastName
	 
	def addDot = selectedSchemaList.split(",")
	def listArraySchema = []
	if(addDot.size() == 0) {
		//listArraySchema.add("\"${selectedSchemaList}\"")
		listArraySchema.add(selectedSchemaList)
	}
	for(li in addDot) {
		loggerApi.info("lilililili==="+"\"${li}\"")
		//listArraySchema.add("\"${li}\"")
		listArraySchema.add(li)
	}
def offeringRedirectUrl = applicationApi.getInfo().getBaseUrl()+'asset/'+item.id
	
loggerApi.info('techstorageName---->'+techstorageName)
execution.setVariable('storageLastName',storageLastName)
execution.setVariable('storageAttrList',storageAttrList)
execution.setVariable('techstorageName',techstorageName)
execution.setVariable('selectedSchemaToList',listArraySchema.join('.'))
//execution.setVariable('dataOfferingAssetId',item.id)
execution.setVariable('offeringRedirectUrl',offeringRedirectUrl)

def addAttribute = { assetId, typeId, value ->
	attributeApi.addAttribute(
			AddAttributeRequest.builder()
			.assetId(assetId)
			.typeId(typeId)
			.value(value)
			.build()
			)
}


def addAsset = { name, typeId, displayName, domainId, statusId ->
	assetApi.addAsset(
			AddAssetRequest.builder()
			.name(name)
			.typeId(typeId)
			.displayName(displayName)
			.domainId(domainId)
			.status(statusId)
			.build()
			)
}

def addRelation = {sourceId, targetId, relationtypeId ->
	relationApi.addRelation(
			AddRelationRequest.builder()
			.sourceId(sourceId)
			.targetId(targetId)
			.typeId(relationtypeId)
			.build()
			)
}

def isError = false
def errorMessage

try {


def domainId = string2Uuid(item.getVocabulary())
	loggerApi.info('domainId--->'+domainId)

	def domainName =  domainApi.getDomain(string2Uuid(item.getVocabulary())).getName()
	loggerApi.info('domainName--->'+domainName)

	//Getting the sealid from the Domain
	def sealId = domainName.split(' -')[0]
	loggerApi.info('sealId-->'+sealId)


	//Finding the value of EPS Producer Attribute from the Data Set
	def typeIds = []
	typeIds.add(string2Uuid(epsProducerNameAttrTypeId))
	
	def epsProducerName

	if(!targetDataSets.isEmpty())
		{
			for(eachDataSet in targetDataSets)
			{
	def epsproducerAttr = attributeApi.findAttributes(
			FindAttributesRequest.builder()
			.typeIds(typeIds)
			.assetId(eachDataSet)
			.build()
			).getResults()

	 epsProducerName = epsproducerAttr.get(0).getValue()
	loggerApi.info('epsProducerName'+epsProducerName)
			}
			
		}
	def dataOfferingFullName = assetApi.getAsset(string2Uuid(item.id)).getName()
	loggerApi.info('dataOfferingFullName--->'+dataOfferingFullName)

	dataOfferingFullName = dataOfferingFullName.split('-')[0]

	def dataOfferingAsset

	dataOfferingAsset = addAsset(dataOfferingFullName+"-"+dataofferingName ,string2Uuid(dataOfferingAssetTypeId),dataofferingName,domainId,string2Uuid(candidateStatusTypeId))

	loggerApi.info('dataOfferingAsset-->'+dataOfferingAsset)

	def dataOfferingAssetId = dataOfferingAsset.getId()
	
	execution.setVariable('dataOfferingAssetId',uuid2String(dataOfferingAssetId))

	// Adding the attributes to the Data Offering Asset

	def contacteMailTrim = contacteMail.trim().replaceAll("\\s+", "")
	def desc = description.toString().replace("&nbsp;"," ")

	addAttribute(dataOfferingAssetId,string2Uuid(epsProducerNameAttrTypeId), epsProducerName)
	addAttribute(dataOfferingAssetId,string2Uuid(descriptionAttrId),desc)
	addAttribute(dataOfferingAssetId,string2Uuid(consumableAttrId),consumable.toString())
	addAttribute(dataOfferingAssetId,string2Uuid(publicationModeAttrId),publicationMode)
	if(execution.getVariable("slaArrivalTime") != "") {
		addAttribute(dataOfferingAssetId,string2Uuid(slaArrivalTimeAttrId),slaArrivalTimeMap.get(slaArrivalTime))
		}
		if(execution.getVariable("slaOffsetDays") != "") {
		addAttribute(dataOfferingAssetId,string2Uuid(slaOffsetDaysAttrId),slaOffsetDaysMap.get(slaOffsetDays))
		}
		if(execution.getVariable("slaCalender") != "") {
		addAttribute(dataOfferingAssetId,string2Uuid(slaCalenderAttrId),slaCalendarMap.get(slaCalender))
		}
		addAttribute(dataOfferingAssetId,string2Uuid(contactEmailAttrId),contacteMailTrim)
		
		if(execution.getVariable("instanceName") != "") {
			//addAttribute(dataOfferingAssetId,string2Uuid(instanceNameAttrTypeId),instanceName)
			addRelation(dataOfferingAssetId,string2Uuid(instanceName), string2Uuid(dataAssetUtilizePipelineRelTypeId))
		}
	
		// Adding Relations to the Data Offering
		if(execution.getVariable("mileStoneByMilestoneField") != "") {
			addRelation(dataOfferingAssetId,string2Uuid(mileStoneByMilestoneField), string2Uuid(dataOfferingMilestoneByMilestoneFieldRelTypeId))
		}
		
		for(dataSet in targetDataSets)
			{
				addRelation(dataSet,dataOfferingAssetId,string2Uuid(dataSetContainsDataOfferingRelTypeId))
			}
			if(execution.getVariable("selectedSchemaList") != "") {
				def selectedSchema=utility.toList(selectedSchemaList)
				for(schema in selectedSchema)
				{
					addRelation(dataOfferingAssetId,string2Uuid(schema), string2Uuid(dataOfferingGroupsSchemaRelTypeId))
		
				}
		
			}
			
			
			def tableAssets = []
			if(selectAllTablesAndColumns == "Yes") {
		
				def avroSchemas=[]
				def normalSchemas=[]
				def avroTypeIds=[]
				avroTypeIds.add(string2Uuid(avroSchemaAttrTypeId))
				avroTypeIds.add(string2Uuid(avroSchemaPrimaryKeyAttrTypeId))
				def attrFound
				def avroSchemaAttr
		
				def schemas=utility.toList(selectedSchemaList)
				for(schema in schemas) {
					avroSchemaAttr=attributeApi.findAttributes(FindAttributesRequest.builder()
					.typeIds(avroTypeIds)
					.assetId(string2Uuid(schema))
					.build()
					).getResults()
		
		
					loggerApi.info('attributes-->'+avroSchemaAttr)
					if(!avroSchemaAttr.isEmpty()) {
						avroSchemas.add(schema)
					}
					else {
		
						normalSchemas.add(schema)
					}
				}
		
				/*Normal schema Relation*/
		
				for(schemaid in normalSchemas) {
					def tableRels = relationApi.findRelations(
					FindRelationsRequest.builder()
					.sourceId(string2Uuid(schemaid))
					.relationTypeId(string2Uuid(schemaContainsTableRelTypeId))
					.build()
					).getResults()
		
					/*Add schema relation to data offering*/
					/*def groupsSchemaRelations =relationApi.findRelations(
					 FindRelationsRequest.builder()
					 .sourceId(dataOfferingAssetId)
					 .relationTypeId(string2Uuid(dataOfferingGroupsSchemasRelId))
					 .targetId(string2Uuid(schemaid))
					 .build()
					 ).getResults()
					 if(groupsSchemaRelations.isEmpty()) {
					 relationApi.addRelation(
					 AddRelationRequest.builder()
					 .sourceId(dataOfferingAssetId)
					 .typeId(string2Uuid(dataOfferingGroupsSchemasRelId))
					 .targetId(string2Uuid(schemaid))
					 .build()
					 )
					 }*/
		
					def tabs=[]
					for(tableRel in tableRels)
					{
						tableAssets.add(uuid2String(tableRel.getTarget().getId()))
		
						def findTabRel=relationApi.findRelations(
						FindRelationsRequest.builder()
						.sourceId(dataOfferingAssetId)
						.relationTypeId(string2Uuid(dataOfferingGroupTableRelTypeId))
						.targetId(tableRel.getTarget().getId())
						.build()
						).getResults()
						loggerApi.info('TableRelation-->'+findTabRel)
						if(findTabRel.isEmpty()) {
							def tableRelt = relationApi.addRelation(
							AddRelationRequest.builder()
							.sourceId(dataOfferingAssetId)
							.typeId(string2Uuid(dataOfferingGroupTableRelTypeId))
							.targetId(tableRel.getTarget().getId())
							.build()
							)
						}
					}
				}
		
				/*Find Column Relation*/
				def columnAssets = []
				def columnRels =[]
		
				for(table in tableAssets) {
					columnRels = relationApi.findRelations(
					FindRelationsRequest.builder()
					.targetId(string2Uuid(table))
					.relationTypeId(string2Uuid(columnPartOfTableRelTypeId))
					.build()
					).getResults()
		
					for(columnRel in columnRels)
					{
						columnAssets.add(uuid2String(columnRel.getSource().getId()))
		
						def findColRel=relationApi.findRelations(
						FindRelationsRequest.builder()
						.sourceId(dataOfferingAssetId)
						.relationTypeId(string2Uuid(dataOfferingGroupFieldsColumnRelTypeId))
						.targetId(columnRel.getSource().getId())
						.build()
						).getResults()
		
						loggerApi.info('columnRelation-->'+findColRel)
		
						if(findColRel.isEmpty()) {
							def columnRelt = relationApi.addRelation(
							AddRelationRequest.builder()
							.sourceId(dataOfferingAssetId)
							.typeId(string2Uuid(dataOfferingGroupFieldsColumnRelTypeId))
							.targetId(columnRel.getSource().getId())
							.build()
							)
						}
					}
				}
				
			}
					
		
			def parentCommunityId = communityApi.getCommunity(string2Uuid(item.getCommunity())).getParent().getId()
			loggerApi.info('parent community --->'+parentCommunityId)
		
			def phyDataDicComm = communityApi.findCommunities(
				FindCommunitiesRequest.builder()
				.name(physicalDataDictionariesCommunityName)
				.nameMatchMode(MatchMode.ANYWHERE)
				.parentId(parentCommunityId)
				.build()
				).getResults()
				
			loggerApi.info('phyDataDicComm --->'+phyDataDicComm)
		
			def dataSetDomain = domainApi.getDomain(string2Uuid(item.getVocabulary())).getName()
		
			def dataSetDomainSealId = dataSetDomain.split('-')[0]
		
			if(!schemaName.isEmpty() && schemaName != null && schemaDefinition != null && primaryKeys != null)
			{
		
			def phyDataDicDomain = domainApi.addDomain(
				AddDomainRequest.builder()
				.name(dataSetDomainSealId+'-'+schemaName)
				.typeId(string2Uuid(physicalDataDictionaryDomainTypeId))
				.communityId(phyDataDicComm.get(0).getId())
				.build()
				)
				
			loggerApi.info('phyDataDicDomain----> '+phyDataDicDomain)
		
			def schemaAsset = assetApi.addAsset(
				AddAssetRequest.builder()
				.name(schemaName)
				.typeId(string2Uuid(schemaAssetTypeId))
				.domainId(phyDataDicDomain.getId())
				.build()
				)
				
				def schemaAssetId = schemaAsset.getId()
				
					def schemDef = schemaDefinition.toString().replace("&nbsp;"," ")
					addAttribute(schemaAssetId,string2Uuid(schemaDefinitionAttrTypeId),schemDef.replaceAll("\\<.*?\\>", ""))
					addAttribute(schemaAssetId,string2Uuid(avroSchemaPrimaryKeyAttrTypeId),primaryKeys.toString().trim().replaceAll("\\s+", " "))
					addAttribute(schemaAssetId,string2Uuid(dataSourceTypeAttrTypeId),'Avro')
					
				
			relationApi.addRelation(
				AddRelationRequest.builder()
				.sourceId(dataOfferingAssetId)
				.typeId(string2Uuid(dataOfferingGroupsSchemaRelTypeId))
				.targetId(schemaAssetId)
				.build()
				)
		
			
			}
			
			
			
			if(execution.getVariable("alternateSchemaLocation") != "")
				{
					def alternateSchema = alternateSchemaLocation.trim().toLowerCase().replaceAll("\\s+", " ").split(" ").collect{it.capitalize()}.join(" ")
					
					
					
					loggerApi.info('alternateSchema'+alternateSchema)
					if(!alternateSchema.isEmpty()) {
						
							def alterPhyDataDicDomain = domainApi.addDomain(
								AddDomainRequest.builder()
								.name(dataSetDomainSealId+'- '+alternateSchema)
								.typeId(string2Uuid(physicalDataDictionaryDomainTypeId))
								.communityId(phyDataDicComm.get(0).getId())
								.build()
								)
							def alternateSchemaAsset = assetApi.addAsset(
								AddAssetRequest.builder()
								.name(alternateSchema)
								.typeId(string2Uuid(schemaAssetTypeId))
								.domainId(alterPhyDataDicDomain.getId())
								.build()
								)
							addAttribute(alternateSchemaAsset.getId(),string2Uuid(dataSourceTypeAttrTypeId),'Avro')
							relationApi.addRelation(
								AddRelationRequest.builder()
								.sourceId(dataOfferingAssetId)
								.typeId(string2Uuid(dataOfferingGroupsSchemaRelTypeId))
								.targetId(alternateSchemaAsset.getId())
								.build()
								)
						
						}
						
					}
				
			
			
			
			
			
			
			
	offeringRedirectUrl = applicationApi.getInfo().getBaseUrl()+'asset/'+uuid2String(dataOfferingAssetId)
	
	
	execution.setVariable('offeringRedirectUrl',offeringRedirectUrl)
}
			
catch(Exception ex) {
			isError = true
			errorMessage = ex.getMessage()
			execution.setVariable('isError',isError)
			execution.setVariable('errorMessage',errorMessage)
		}]]></script>
    </scriptTask>
    <sequenceFlow id="flow16" sourceRef="exclusivegateway4" targetRef="scripttask5">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg==""  &&  (selectAllTablesAndColumns == "Yes" || selectAllTablesAndColumns =="none")}]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="exclusivegateway6" name="Exclusive Gateway"></exclusiveGateway>
    <userTask id="usertask5" name="S3 File System Metadata Form" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="name1" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;techStorage()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Technology Storage Platform Name&lt;/p&gt;&lt;/div&gt;&lt;script&gt; function techStorage() {var y = document.getElementById(&quot;techStorageColor&quot;);var x = document.getElementById(&quot;techStorageHelpText&quot;);if (x.style.display === &quot;none&quot;) {x.style.display = &quot;block&quot;;y.style.color = '#008902';}else {x.style.display = &quot;none&quot;;y.style.color = '#8C8C8C';}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;name1&quot;).length;i++) {var x = document.getElementsByName(&quot;name1&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-name1-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-name1-modal {margin-left: -45% !important;width: 90% !important;min-height: 680px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="string" default="${techstorageName}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURI" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Resource URI &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageResource()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Resource URI &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageResource(){var y = document.getElementById(&quot;storageResourceColor&quot;);var x=document.getElementById(&quot;storageResourceHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.StorageResourceURI}" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageFormat" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Format &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageFormat()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Format &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageFormat(){var y = document.getElementById(&quot;storageFormatColor&quot;);var x=document.getElementById(&quot;storageFormatHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageFormat}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${storageFormatValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="bucketARN" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Bucket ARN &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketARNColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;bucketARN()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketARNHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Bucket ARN &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function bucketARN(){var y = document.getElementById(&quot;bucketARNColor&quot;);var x=document.getElementById(&quot;bucketARNHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.BucketARN}" required="true"></activiti:formProperty>
        <activiti:formProperty id="awsRegion" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; AWS Region &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsRegionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;awsRegion()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsRegionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide AWS Region &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function awsRegion(){var y = document.getElementById(&quot;awsRegionColor&quot;);var x=document.getElementById(&quot;awsRegionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.AWSRegion}" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageCompression" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Compression &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageCompression()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Compression &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageCompression(){var y = document.getElementById(&quot;storageCompressionColor&quot;);var x=document.getElementById(&quot;storageCompressionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageCompression}">
          <activiti:value id="dynamicValuesExpression" name="${storageCompressionValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="awsAccountIdentifier" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; AWS Account Identifier &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsAccColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;awsAcc()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsAccHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide AWS Account Identifier &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function awsAcc(){var y = document.getElementById(&quot;awsAccColor&quot;);var x=document.getElementById(&quot;awsAccHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.AWSAccountIdentifier}"></activiti:formProperty>
        <activiti:formProperty id="kmsARN" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; KMS ARN &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;kmsARNColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;kmsARN()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;kmsARNHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide KMS ARN &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function kmsARN(){var y = document.getElementById(&quot;kmsARNColor&quot;);var x=document.getElementById(&quot;kmsARNHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.KMSARN}"></activiti:formProperty>
        <activiti:formProperty id="bucketPrefix" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Bucket Prefix &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketPrefixColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;bucketPrefix()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketPrefixHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Bucket Prefix &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function bucketPrefix(){var y = document.getElementById(&quot;bucketPrefixColor&quot;);var x=document.getElementById(&quot;bucketPrefixHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.BucketPrefix}"></activiti:formProperty>
        <activiti:formProperty id="bucketName" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Bucket Name &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketNameColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;bucketName()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;bucketNameHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Bucket Name &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function bucketName(){var y = document.getElementById(&quot;bucketNameColor&quot;);var x=document.getElementById(&quot;bucketNameHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.BucketName}"></activiti:formProperty>
        <activiti:formProperty id="authenticationType" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Authentication Type &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;authentication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Authentication Type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function authentication(){var y = document.getElementById(&quot;authenticationColor&quot;);var x=document.getElementById(&quot;authenticationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.AuthenticationType}">
          <activiti:value id="dynamicValuesExpression" name="${AuthenticationTypeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="userId" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userId()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userId(){var y = document.getElementById(&quot;userIdColor&quot;);var x=document.getElementById(&quot;userIdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ConnectionUserId}" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordVaultKey" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id Password Vault Key &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userIdPwd()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id Password Vault Key &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userIdPwd(){var y = document.getElementById(&quot;userIdPwdColor&quot;);var x=document.getElementById(&quot;userIdPwdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.UserIdPasswordVaultKey}" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Resource Parameter(s) &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;resourceParameter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Resource Parameter(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function resourceParameter(){var y = document.getElementById(&quot;resourceParameterColor&quot;);var x=document.getElementById(&quot;resourceParameterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ResourceParameters}"></activiti:formProperty>
        <activiti:formProperty id="awsDefaultProfile" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; AWS Default Profile &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsDefaultColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;awsDefault()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;awsDefaultHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide AWS Default Profile &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function awsDefault(){var y = document.getElementById(&quot;awsDefaultColor&quot;);var x=document.getElementById(&quot;awsDefaultHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.AWSDefaultProfile}"></activiti:formProperty>
        <activiti:formProperty id="customReaderClass" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Class &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Class &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReader(){var y = document.getElementById(&quot;customReaderColor&quot;);var x=document.getElementById(&quot;customReaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderClass}"></activiti:formProperty>
        <activiti:formProperty id="customReaderParameter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReaderParams()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReaderParams(){var y = document.getElementById(&quot;customReaderParamsColor&quot;);var x=document.getElementById(&quot;customReaderParamsHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderParams}"></activiti:formProperty>
        <activiti:formProperty id="submit" name="Submit" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow23" sourceRef="exclusivegateway6" targetRef="usertask5">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageLastName == 'S3'}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask6" name="File System Metadata Form" activiti:candidateUsers="user(${startUser})">
      <documentation>${validationMsg}</documentation>
      <extensionElements>
        <activiti:formProperty id="name1" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;techStorage()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Technology Storage Platform Name&lt;/p&gt;&lt;/div&gt;&lt;script&gt; function techStorage() {var y = document.getElementById(&quot;techStorageColor&quot;);var x = document.getElementById(&quot;techStorageHelpText&quot;);if (x.style.display === &quot;none&quot;) {x.style.display = &quot;block&quot;;y.style.color = '#008902';}else {x.style.display = &quot;none&quot;;y.style.color = '#8C8C8C';}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;name1&quot;).length;i++) {var x = document.getElementsByName(&quot;name1&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-name1-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-name1-modal {margin-left: -45% !important;width: 90% !important;min-height: 680px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="string" default="${techstorageName}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURI" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Resource URI &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageResource()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Resource URI &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageResource(){var y = document.getElementById(&quot;storageResourceColor&quot;);var x=document.getElementById(&quot;storageResourceHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.StorageResourceURI}" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageFormat" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Format &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageFormat()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Format &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageFormat(){var y = document.getElementById(&quot;storageFormatColor&quot;);var x=document.getElementById(&quot;storageFormatHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageFormat}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${storageFormatValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="storageCompression" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Compression &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageCompression()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Compression &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageCompression(){var y = document.getElementById(&quot;storageCompressionColor&quot;);var x=document.getElementById(&quot;storageCompressionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageCompression}">
          <activiti:value id="dynamicValuesExpression" name="${storageCompressionValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="fileDelimiter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; File Delimiter &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileDelimiterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fileDelimiter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileDelimiterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide File Delimiter &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fileDelimiter(){var y = document.getElementById(&quot;fileDelimiterColor&quot;);var x=document.getElementById(&quot;fileDelimiterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.FileDelimiter}"></activiti:formProperty>
        <activiti:formProperty id="fileFlagExtension" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; File Flag Extension &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileFlagExtensionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fileFlagExtension()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileFlagExtensionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide File Flag Extension &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fileFlagExtension(){var y = document.getElementById(&quot;fileFlagExtensionColor&quot;);var x=document.getElementById(&quot;fileFlagExtensionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.FileFlagExtension}"></activiti:formProperty>
        <activiti:formProperty id="authenticationType" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Authentication Type &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;authentication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Authentication Type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function authentication(){var y = document.getElementById(&quot;authenticationColor&quot;);var x=document.getElementById(&quot;authenticationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.AuthenticationType}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${AuthenticationTypeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="userId" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userId()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userId(){var y = document.getElementById(&quot;userIdColor&quot;);var x=document.getElementById(&quot;userIdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ConnectionUserId}" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordVaultKey" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id Password Vault Key &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userIdPwd()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id Password Vault Key &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userIdPwd(){var y = document.getElementById(&quot;userIdPwdColor&quot;);var x=document.getElementById(&quot;userIdPwdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.UserIdPasswordVaultKey}" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Resource Parameter(s) &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;resourceParameter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Resource Parameter(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function resourceParameter(){var y = document.getElementById(&quot;resourceParameterColor&quot;);var x=document.getElementById(&quot;resourceParameterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ResourceParameters}"></activiti:formProperty>
        <activiti:formProperty id="customReaderClass" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Class &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Class &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReader(){var y = document.getElementById(&quot;customReaderColor&quot;);var x=document.getElementById(&quot;customReaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderClass}"></activiti:formProperty>
        <activiti:formProperty id="customReaderParameter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReaderParams()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReaderParams(){var y = document.getElementById(&quot;customReaderParamsColor&quot;);var x=document.getElementById(&quot;customReaderParamsHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderParams}"></activiti:formProperty>
        <activiti:formProperty id="fileHeaderRowCount" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; File Header Row Count &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileHeaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fileHeader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileHeaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide File Header Row Count &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fileHeader(){var y = document.getElementById(&quot;fileHeaderColor&quot;);var x=document.getElementById(&quot;fileHeaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.FileHeaderRowCount}">
          <activiti:value id="helpText" name="&lt;b&gt;Only Numeric Values are allowed&lt;/b&gt;"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="fileTrailerRecordCount" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; File Trailer Record Count &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileFooterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fileFooter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileFooterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide File Trailer Record Count &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fileFooter(){var y = document.getElementById(&quot;fileFooterColor&quot;);var x=document.getElementById(&quot;fileFooterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.FileTrailerRecordCount}">
          <activiti:value id="helpText" name="&lt;b&gt;Only Numeric Values are allowed&lt;/b&gt;"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="fileTrailerSchema" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; File Trailer Schema &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileTrailerColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fileTrailer()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fileTrailerHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide File Trailer Schema &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fileTrailer(){var y = document.getElementById(&quot;fileTrailerColor&quot;);var x=document.getElementById(&quot;fileTrailerHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.FileTrailerSchema}"></activiti:formProperty>
        <activiti:formProperty id="submit" name="Submit" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow24" sourceRef="exclusivegateway6" targetRef="usertask6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageLastName == 'FILESYSTEM' }]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask7" name="Hadoop File System Metadata Form" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="name1" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;techStorage()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Technology Storage Platform Name&lt;/p&gt;&lt;/div&gt;&lt;script&gt; function techStorage() {var y = document.getElementById(&quot;techStorageColor&quot;);var x = document.getElementById(&quot;techStorageHelpText&quot;);if (x.style.display === &quot;none&quot;) {x.style.display = &quot;block&quot;;y.style.color = '#008902';}else {x.style.display = &quot;none&quot;;y.style.color = '#8C8C8C';}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;name1&quot;).length;i++) {var x = document.getElementsByName(&quot;name1&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-name1-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-name1-modal {margin-left: -45% !important;width: 90% !important;min-height: 680px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="string" default="${techstorageName}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURI" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Resource URI &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageResource()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Resource URI &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageResource(){var y = document.getElementById(&quot;storageResourceColor&quot;);var x=document.getElementById(&quot;storageResourceHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.StorageResourceURI}" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageFormat" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Format &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageFormat()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Format &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageFormat(){var y = document.getElementById(&quot;storageFormatColor&quot;);var x=document.getElementById(&quot;storageFormatHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageFormat}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${storageFormatValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="storageCompression" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Compression &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageCompression()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Compression &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageCompression(){var y = document.getElementById(&quot;storageCompressionColor&quot;);var x=document.getElementById(&quot;storageCompressionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageCompression}">
          <activiti:value id="dynamicValuesExpression" name="${storageCompressionValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="hadoopConfigLocation" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Hadoop Config Location &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;hadoopConfigColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;hadoopConfig()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;hadoopConfigHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Hadoop Config Location &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function hadoopConfig(){var y = document.getElementById(&quot;hadoopConfigColor&quot;);var x=document.getElementById(&quot;hadoopConfigHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.HadoopConfigLocation}" required="true"></activiti:formProperty>
        <activiti:formProperty id="authenticationType" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Authentication Type &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;authentication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Authentication Type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function authentication(){var y = document.getElementById(&quot;authenticationColor&quot;);var x=document.getElementById(&quot;authenticationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.AuthenticationType}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${AuthenticationTypeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="userId" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userId()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userId(){var y = document.getElementById(&quot;userIdColor&quot;);var x=document.getElementById(&quot;userIdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ConnectionUserId}" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordVaultKey" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id Password Vault Key &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userIdPwd()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id Password Vault Key &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userIdPwd(){var y = document.getElementById(&quot;userIdPwdColor&quot;);var x=document.getElementById(&quot;userIdPwdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.UserIdPasswordVaultKey}" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Resource Parameter(s) &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;resourceParameter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Resource Parameter(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function resourceParameter(){var y = document.getElementById(&quot;resourceParameterColor&quot;);var x=document.getElementById(&quot;resourceParameterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ResourceParameters}"></activiti:formProperty>
        <activiti:formProperty id="customReaderClass" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Class &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Class &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReader(){var y = document.getElementById(&quot;customReaderColor&quot;);var x=document.getElementById(&quot;customReaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderClass}"></activiti:formProperty>
        <activiti:formProperty id="customReaderParameter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReaderParams()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReaderParams(){var y = document.getElementById(&quot;customReaderParamsColor&quot;);var x=document.getElementById(&quot;customReaderParamsHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderParams}"></activiti:formProperty>
        <activiti:formProperty id="submit" name="Submit" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow25" sourceRef="exclusivegateway6" targetRef="usertask7">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageLastName == 'HDFS' }]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask8" name="Database Metadata Form" activiti:candidateUsers="user(${startUser})">
      <documentation>${validationMsg}</documentation>
      <extensionElements>
        <activiti:formProperty id="name1" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;techStorage()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Technology Storage Platform Name&lt;/p&gt;&lt;/div&gt;&lt;script&gt; function techStorage() {var y = document.getElementById(&quot;techStorageColor&quot;);var x = document.getElementById(&quot;techStorageHelpText&quot;);if (x.style.display === &quot;none&quot;) {x.style.display = &quot;block&quot;;y.style.color = '#008902';}else {x.style.display = &quot;none&quot;;y.style.color = '#8C8C8C';}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;name1&quot;).length;i++) {var x = document.getElementsByName(&quot;name1&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-name1-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-name1-modal {margin-left: -45% !important;width: 90% !important;min-height: 680px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="string" default="${techstorageName}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURI" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Resource URI &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageResource()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Resource URI &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageResource(){var y = document.getElementById(&quot;storageResourceColor&quot;);var x=document.getElementById(&quot;storageResourceHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.StorageResourceURI}" required="true"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrievalQuery" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Database Data Retrieval Query &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;dataRetrieval()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Data Retrieval Query &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function dataRetrieval(){var y = document.getElementById(&quot;dataRetrievalColor&quot;);var x=document.getElementById(&quot;dataRetrievalHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.DatabaseDataRetrievalQuery}" required="true"></activiti:formProperty>
        <activiti:formProperty id="dataIngestionStrategy" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Data Ingestion Strategy &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataIngStrategyColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;dataIngStrategy()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataIngStrategyHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Data Ingestion strategy &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function dataIngStrategy(){var y = document.getElementById(&quot;dataIngStrategyColor&quot;);var x=document.getElementById(&quot;dataIngStrategyHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.DatabaseDataIngestionStrategy}">
          <activiti:value id="dynamicValuesExpression" name="${databaseIngValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="fetchSize" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Fetch Size &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fetchSizeColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;fetchSize()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;fetchSizeHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Fetch Size &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function fetchSize(){var y = document.getElementById(&quot;fetchSizeColor&quot;);var x=document.getElementById(&quot;fetchSizeHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.DatabaseFetchSize}">
          <activiti:value id="helpText" name="&lt;b&gt;Only Numeric Values are allowed&lt;/b&gt;"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="authenticationType" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Authentication Type &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;authentication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Authentication Type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function authentication(){var y = document.getElementById(&quot;authenticationColor&quot;);var x=document.getElementById(&quot;authenticationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.AuthenticationType}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${AuthenticationTypeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="userId" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userId()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userId(){var y = document.getElementById(&quot;userIdColor&quot;);var x=document.getElementById(&quot;userIdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ConnectionUserId}" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordVaultKey" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id Password Vault Key &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userIdPwd()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id Password Vault Key &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userIdPwd(){var y = document.getElementById(&quot;userIdPwdColor&quot;);var x=document.getElementById(&quot;userIdPwdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.UserIdPasswordVaultKey}" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Resource Parameter(s) &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;resourceParameter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Resource Parameter(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function resourceParameter(){var y = document.getElementById(&quot;resourceParameterColor&quot;);var x=document.getElementById(&quot;resourceParameterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ResourceParameters}"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrievalQueryParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Database Data Retreival Query Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;dataRetrieval()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Database Data Retrieval Query Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function dataRetrieval(){var y = document.getElementById(&quot;dataRetrievalColor&quot;);var x=document.getElementById(&quot;dataRetrievalHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.DatabaseDataRetrievalQueryParameters}"></activiti:formProperty>
        <activiti:formProperty id="databaseDataRetrievalPartition" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Database Data Retreival Partition &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalPartitionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;dataRetrievalPartition()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;dataRetrievalPartitionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Database Data Retreival Partition &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function dataRetrievalPartition(){var y = document.getElementById(&quot;dataRetrievalPartitionColor&quot;);var x=document.getElementById(&quot;dataRetrievalPartitionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.DatabaseDataRetrievalPartition}"></activiti:formProperty>
        <activiti:formProperty id="customReaderClass" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Class &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Class &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReader(){var y = document.getElementById(&quot;customReaderColor&quot;);var x=document.getElementById(&quot;customReaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderClass}"></activiti:formProperty>
        <activiti:formProperty id="customReaderParameter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReaderParams()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReaderParams(){var y = document.getElementById(&quot;customReaderParamsColor&quot;);var x=document.getElementById(&quot;customReaderParamsHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderParams}"></activiti:formProperty>
        <activiti:formProperty id="submit" name="Submit" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow26" sourceRef="exclusivegateway6" targetRef="usertask8">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageLastName == 'DATABASE' }]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask9" name="IMPALA Metadata Form" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="name1" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Name &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;techStorage()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;techStorageHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Technology Storage Platform Name&lt;/p&gt;&lt;/div&gt;&lt;script&gt; function techStorage() {var y = document.getElementById(&quot;techStorageColor&quot;);var x = document.getElementById(&quot;techStorageHelpText&quot;);if (x.style.display === &quot;none&quot;) {x.style.display = &quot;block&quot;;y.style.color = '#008902';}else {x.style.display = &quot;none&quot;;y.style.color = '#8C8C8C';}}setTimeout(function() {for (var i = 0;i &lt; document.getElementsByName(&quot;name1&quot;).length;i++) {var x = document.getElementsByName(&quot;name1&quot;)[i].parentNode;var formValue = x.parentNode;var formWrapper = formValue.parentNode;var modalContent = formWrapper.parentNode;var modalDialog = modalContent.parentNode;modalDialog.classList.add(&quot;custom-name1-modal&quot;);}}, 0);&lt;/script&gt;&lt;style&gt; .ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.modalwindow.custom-name1-modal {margin-left: -45% !important;width: 90% !important;min-height: 680px !important;height: auto !important;top: 40px !important;}.form-wrapper {max-height: fit-content;}&lt;/style&gt;" type="string" default="${techstorageName}" writable="false" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageResourceURI" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Resource URI &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageResource()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageResourceHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Resource URI &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageResource(){var y = document.getElementById(&quot;storageResourceColor&quot;);var x=document.getElementById(&quot;storageResourceHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.StorageResourceURI}" required="true"></activiti:formProperty>
        <activiti:formProperty id="storageFormat" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Format &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageFormat()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageFormatHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Format &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageFormat(){var y = document.getElementById(&quot;storageFormatColor&quot;);var x=document.getElementById(&quot;storageFormatHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageFormat}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${storageFormatValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="storageCompression" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Storage Compression &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;storageCompression()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;storageCompressionHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Storage Compression &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function storageCompression(){var y = document.getElementById(&quot;storageCompressionColor&quot;);var x=document.getElementById(&quot;storageCompressionHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.StorageCompression}">
          <activiti:value id="dynamicValuesExpression" name="${storageCompressionValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="impalaConfigLocation" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; IMPALA Config Location &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;hadoopConfigColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;hadoopConfig()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;hadoopConfigHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Hadoop Config Location &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function hadoopConfig(){var y = document.getElementById(&quot;hadoopConfigColor&quot;);var x=document.getElementById(&quot;hadoopConfigHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ImpalaConfigLocation}"></activiti:formProperty>
        <activiti:formProperty id="authenticationType" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Authentication Type &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;authentication()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;authenticationHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Authentication Type &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function authentication(){var y = document.getElementById(&quot;authenticationColor&quot;);var x=document.getElementById(&quot;authenticationHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="dynamicEnum" default="${storageAttrList.AuthenticationType}" required="true">
          <activiti:value id="dynamicValuesExpression" name="${AuthenticationTypeValuesMap}"></activiti:value>
        </activiti:formProperty>
        <activiti:formProperty id="userId" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userId()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userId(){var y = document.getElementById(&quot;userIdColor&quot;);var x=document.getElementById(&quot;userIdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ConnectionUserId}" required="true"></activiti:formProperty>
        <activiti:formProperty id="userIdPasswordVaultKey" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; User Id Password Vault Key &lt;b style=&quot;color:red;&quot;&gt;*&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;userIdPwd()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;userIdPwdHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide User Id Password Vault Key &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function userIdPwd(){var y = document.getElementById(&quot;userIdPwdColor&quot;);var x=document.getElementById(&quot;userIdPwdHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.UserIdPasswordVaultKey}" required="true"></activiti:formProperty>
        <activiti:formProperty id="resourceParameters" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Resource Parameter(s) &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;resourceParameter()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;resourceParameterHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt; Provide Resource Parameter(s) &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function resourceParameter(){var y = document.getElementById(&quot;resourceParameterColor&quot;);var x=document.getElementById(&quot;resourceParameterHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.ResourceParameters}"></activiti:formProperty>
        <activiti:formProperty id="customReaderClass" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Class &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReader()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Class &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReader(){var y = document.getElementById(&quot;customReaderColor&quot;);var x=document.getElementById(&quot;customReaderHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderClass}"></activiti:formProperty>
        <activiti:formProperty id="customReaderParameter" name="&lt;div style=&quot;overflow: hidden;&quot;&gt;&lt;p style=&quot;float:left;&quot;&gt; Custom Reader Parameters &lt;b style=&quot;color:red;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsColor&quot; style=&quot;float:left;padding: 0 1%;cursor:pointer&quot; onclick=&quot;customReaderParams()&quot;&gt;&lt;b style=&quot;position:relative;float:left;font-size:18px;&quot;&gt;&amp;#9432;&lt;/b&gt;&lt;/p&gt;&lt;p id=&quot;customReaderParamsHelpText&quot; style=&quot;display: none;float:left;background-color:#4CAF50;color:white;border-radius:8px 8px 8px 0px;padding:5px;position:relative;bottom:10px&quot;&gt;Provide Custom Reader Parameters &lt;/p&gt;&lt;/div&gt;&lt;script&gt;function customReaderParams(){var y = document.getElementById(&quot;customReaderParamsColor&quot;);var x=document.getElementById(&quot;customReaderParamsHelpText&quot;);if(x.style.display===&quot;none&quot;){x.style.display=&quot;block&quot;;y.style.color = '#008902';}else{x.style.display=&quot;none&quot;;y.style.color = '#8C8C8C';}}&lt;/script&gt;" type="string" default="${storageAttrList.CustomReaderParams}"></activiti:formProperty>
        <activiti:formProperty id="submit" name="Submit" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow27" sourceRef="exclusivegateway6" targetRef="usertask9">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageLastName == 'IMPALA'}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask7" name="Script Task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[def validationMsg = ""

try {
	if(!fileHeaderRowCount.isEmpty()) {
		def fileHeader = fileHeaderRowCount.isNumber()
		if(!fileHeader)
		{
			validationMsg += "<br><b><font color = 'red'>* File Header only accept numeric. Please provide numeric value </font></b><br>"
		}
	}
	if(!fileTrailerRecordCount.isEmpty()) {
		def fileTrailer = fileTrailerRecordCount.isNumber()
		//loggerApi.info('isNumberic--->'+isNumberic)
		
		
		if(!fileTrailer)
		{
			validationMsg += "<br><b><font color = 'red'>* File Trailer only accept numeric. Please provide numeric value </font></b><br>"
		}
	}
	
}
catch(Exception ex) {
	loggerApi.info("i am here")
	//validationMsg += "<br><b><font color = 'red'>* File Trailer only accept numeric. Please provide numeric value </font></b><br>"
}
			

loggerApi.info('validationMsg--->'+validationMsg)
execution.setVariable('validationMsg',validationMsg)]]></script>
    </scriptTask>
    <sequenceFlow id="flow28" sourceRef="usertask6" targetRef="scripttask7"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway7" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow29" sourceRef="scripttask7" targetRef="exclusivegateway7"></sequenceFlow>
    <sequenceFlow id="flow30" sourceRef="exclusivegateway7" targetRef="usertask6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg!=""}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask8" name="Validations for Technology Storage" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.component.application.ApplicationApi
import com.collibra.dgc.core.api.component.instance.DomainApi
import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.dto.instance.domain.FindDomainsRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest

def communityId = item.getCommunity()
loggerApi.info('communityId-->'+communityId)

def domainName =  domainApi.getDomain(string2Uuid(item.getVocabulary())).getName()
loggerApi.info('domainName--->'+domainName)

def sealId = domainName.split(' -')[0]
loggerApi.info('sealId-->'+sealId)
def storageExists=false
def storageId
//def validationMsg=""
def storagePlatformDomain = domainApi.findDomains(
		FindDomainsRequest.builder()
		.name(sealId+' - Storage Platforms')
		.nameMatchMode(MatchMode.EXACT)
		.communityId(string2Uuid(communityId))
		.build()
		).getResults()
		
		loggerApi.info('storagePlatformDomain-->'+storagePlatformDomain)
		
if(!storagePlatformDomain.isEmpty())
{
	def storageAssets=assetApi.findAssets(
		FindAssetsRequest.builder()
		.name(name1)
		.nameMatchMode(MatchMode.EXACT)
		.domainId(storagePlatformDomain.get(0).getId())
		.build()
		).getResults()
		loggerApi.info('storageAssets-->'+storageAssets)
		
		if(!storageAssets.isEmpty())
		{
			//validationMsg=" <b><font color='red'>* Technology storage platform - "+name1+" already exists</font></b>"
			storageExists=true
			storageId=	storageAssets.get(0).getId()
			loggerApi.info('storageId'+storageId)
		}
}
//loggerApi.info("validationMsg===>"+validationMsg)
def redirectUrl = applicationApi.getInfo().getBaseUrl()+'asset/'+uuid2String(storageId)
execution.setVariable('storageId',uuid2String(storageId))
execution.setVariable('redirectUrl',redirectUrl)

//execution.setVariable('validationMsg',validationMsg)

execution.setVariable('storageExists',storageExists)
]]></script>
    </scriptTask>
    <sequenceFlow id="flow31" sourceRef="usertask5" targetRef="scripttask8"></sequenceFlow>
    <sequenceFlow id="flow32" sourceRef="exclusivegateway7" targetRef="scripttask8">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg==""}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow33" sourceRef="usertask7" targetRef="scripttask8"></sequenceFlow>
    <scriptTask id="scripttask9" name="Script Task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[def validationMsg = ""

try {
	def isNumberic = fetchSize.isNumber()
	loggerApi.info('isNumberic--->'+isNumberic)
	
	if(!isNumberic)
	{
	validationMsg += "<br><b><font color = 'red'>* Fetch Size only accept numeric. Please provide numeric value </font></b><br>"
	}
}
catch(Exception ex) {
	validationMsg += "<br><b><font color = 'red'>* Fetch Size only accept numeric. Please provide numeric value </font></b><br>"
	execution.setVariable('validationMsg',validationMsg)
}
			

loggerApi.info('validationMsg--->'+validationMsg)
execution.setVariable('validationMsg',validationMsg)]]></script>
    </scriptTask>
    <sequenceFlow id="flow34" sourceRef="usertask8" targetRef="scripttask9"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway8" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow35" sourceRef="scripttask9" targetRef="exclusivegateway8"></sequenceFlow>
    <sequenceFlow id="flow36" sourceRef="exclusivegateway8" targetRef="usertask8">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg!=""}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow37" sourceRef="exclusivegateway8" targetRef="scripttask8">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${validationMsg==""}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow38" sourceRef="usertask9" targetRef="scripttask8"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway9" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow39" sourceRef="scripttask8" targetRef="exclusivegateway9"></sequenceFlow>
    <userTask id="usertask10" name="Storage Platform already exists" activiti:candidateUsers="user(${startUser})">
      <documentation>&lt;b&gt;&lt;a href="${redirectUrl}"&gt;Click here to navigating Technology Storage Platform - ${name1}&lt;/a&gt;&lt;/b&gt;</documentation>
    </userTask>
    <sequenceFlow id="flow40" sourceRef="exclusivegateway9" targetRef="usertask10">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageExists == true}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask10" name="Create Cloned Technology Storage Platform and Relations" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.component.instance.CommunityApi
import com.collibra.dgc.core.api.component.instance.DomainApi
import com.collibra.dgc.core.api.component.logger.LoggerApi
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest
import com.collibra.dgc.core.api.dto.instance.asset.ChangeAssetRequest
import com.collibra.dgc.core.api.dto.instance.attribute.AddAttributeRequest
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.dto.instance.community.FindCommunitiesRequest
import com.collibra.dgc.core.api.dto.instance.relation.AddRelationRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest
import com.collibra.dgc.core.api.component.instance.AssetApi
import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.domain.AddDomainRequest
import com.collibra.dgc.core.api.dto.instance.domain.FindDomainsRequest



def addAttribute = { assetId, typeId, value ->
	attributeApi.addAttribute(
			AddAttributeRequest.builder()
			.assetId(assetId)
			.typeId(typeId)
			.value(value)
			.build()
			)
}


def addAsset = { name, typeId, displayName, domainId, statusId ->
	assetApi.addAsset(
			AddAssetRequest.builder()
			.name(name)
			.typeId(typeId)
			.displayName(displayName)
			.domainId(domainId)
			.status(statusId)
			.build()
			)
}

def addRelation = {sourceId, targetId, relationtypeId ->
	relationApi.addRelation(
			AddRelationRequest.builder()
			.sourceId(sourceId)
			.targetId(targetId)
			.typeId(relationtypeId)
			.build()
			)
}

def isError = false
def errorMessage

try {

	
			def domainName =  domainApi.getDomain(string2Uuid(item.getVocabulary())).getName()
			loggerApi.info('domainName--->'+domainName)

			//Getting the sealid from the Domain
			def sealId = domainName.split(' -')[0]
			loggerApi.info('sealId-->'+sealId)
			//Script for Creating Technology Storage Platform
			
			// finding Community of Data Offering
			def communityId = item.getCommunity()
			loggerApi.info('communityId-->'+communityId)
		
			//finding Storage Platform Domain
			def storagePlatformDomain = domainApi.findDomains(
					FindDomainsRequest.builder()
					.name(sealId+' - Storage Platforms')
					.nameMatchMode(MatchMode.EXACT)
					.communityId(string2Uuid(communityId))
					.build()
					).getResults()
		
		
			def techFullName
			def techStorageAsset
			def techStorageAssetId
			def accessibleThroughRelTypeId
		
			def cloneDataOfferingFullName = assetApi.getAsset(string2Uuid(dataOfferingAssetId)).getName()
			//def cloneDataOfferingFullName = name
			loggerApi.info('cloneDataOfferingFullName-->'+cloneDataOfferingFullName)
		
			if(!storagePlatformDomain.isEmpty())
			{
				// If the Storage Platorm is FILESYSTEM
				if(storageLastName == 'FILESYSTEM') {
		
					accessibleThroughRelTypeId = accessibleThroughFileRelTypeId
		
					techFullName = cloneDataOfferingFullName+"_"+storageLastName
					loggerApi.info('techName--->'+techFullName)
		
					techStorageAsset = addAsset(techFullName,string2Uuid(fileAssetTypeId),name1,storagePlatformDomain.get(0).getId(),string2Uuid(candidateStatusTypeId))
					techStorageAssetId = techStorageAsset.getId()
		
		
					addAttribute(techStorageAssetId,string2Uuid(storageResourceURIAttrTypeId),storageResourceURI.trim().replaceAll("\\s+", " "))
					addAttribute(techStorageAssetId,string2Uuid(storageFormatAttrTypeId),storageFormat)
		
					if(execution.getVariable("storageCompression") != "") {
						addAttribute(techStorageAssetId,string2Uuid(storageCompressionAttrTypeId),storageCompression)
					}
					if(execution.getVariable("fileDelimiter") != "") {
						def fileDelimiterTrim = fileDelimiter.trim().replaceAll("\\s+", " ")
						if(!fileDelimiterTrim.isEmpty()) {
							addAttribute(techStorageAssetId,string2Uuid(fileDelimiterAttrTypeId),fileDelimiterTrim)
						}
		
					}
		
					if(execution.getVariable("fileFlagExtension") != "") {
						def fileFlagExtensionTrim = fileFlagExtension.trim().replaceAll("\\s+", " ")
						if(!fileFlagExtensionTrim.isEmpty()) {
							addAttribute(techStorageAssetId,string2Uuid(fileFlagExtensionAttrTypeId),fileFlagExtensionTrim)
						}
					}
		
					if(execution.getVariable("authenticationType") != "") {
		
						addAttribute(techStorageAssetId,string2Uuid(authenticationTypeAttrTypeId),authenticationType)
					}
		
					if(execution.getVariable("userId") != "") {
						def userIdTrim = userId.trim().replaceAll("\\s+", " ")
						if(!userIdTrim.isEmpty()) {
							addAttribute(techStorageAssetId,string2Uuid(userIdAttrTypeId),userIdTrim)
						}
					}
		
					if(execution.getVariable("userIdPasswordVaultKey") != "") {
						def userIdPasswordVaultKeyTrim = userIdPasswordVaultKey.trim().replaceAll("\\s+", " ")
						if(!userIdPasswordVaultKeyTrim.isEmpty()) {
							addAttribute(techStorageAssetId,string2Uuid(userIdPasswordAttrTypeId),userIdPasswordVaultKeyTrim)
						}
		
					}
		
					if(execution.getVariable("customReaderClass") != "") {
						def customReaderClassTrim = customReaderClass.trim().replaceAll("\\s+", " ")
						if(!customReaderClassTrim.isEmpty()) {
							addAttribute(techStorageAssetId,string2Uuid(customReaderClassAttrTypeId),customReaderClassTrim)
						}
		
					}
		
					if(execution.getVariable("customReaderParameter") != "" && !customReaderParameter.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderParamsAttrTypeId),customReaderParameter.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("resourceParameters") != ""&& !resourceParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(resourceParametersAttrTypeId),resourceParameters.trim().replaceAll("\\s+", " ") )
					}
		
					if(execution.getVariable("fileHeaderRowCount") != "" && fileHeaderRowCount != null) {
		
						addAttribute(techStorageAssetId,string2Uuid(fileHeaderRowCountAttrTypeId),fileHeaderRowCount.toDouble())
					}
					if(execution.getVariable("fileTrailerRecordCount") != "" && fileTrailerRecordCount != null) {
		
						addAttribute(techStorageAssetId,string2Uuid(fileTrailerRecordCountAttrTypeId),Integer.parseInt(fileTrailerRecordCount))
					}
		
		
					if(execution.getVariable("fileTrailerSchema") != "" && !fileTrailerSchema.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(fileTrailerSchemaAttrTypeId),fileTrailerSchema.trim().replaceAll("\\s+", " "))
					}
		
				}
		
				// If the Storage Platorm is DATABASE
				else if(storageLastName == 'DATABASE') {
		
		
					accessibleThroughRelTypeId = accessibleThroughDatabaseRelTypeId
		
					techFullName = cloneDataOfferingFullName+"_"+storageLastName
					loggerApi.info('techName--->'+techFullName)
		
		
					techStorageAsset = addAsset(techFullName,string2Uuid(databaseAssetTypeId),name1,storagePlatformDomain.get(0).getId(),string2Uuid(candidateStatusTypeId))
					techStorageAssetId = techStorageAsset.getId()
		
					addAttribute(techStorageAssetId,string2Uuid(storageResourceURIAttrTypeId),storageResourceURI.trim().replaceAll("\\s+", " "))
					addAttribute(techStorageAssetId,string2Uuid(databaseDataRetrievalQueryAttrTypeId),databaseDataRetrievalQuery.trim().replaceAll("\\s+", " "))
		
		
					if(execution.getVariable("dataIngestionStrategy") != "") {
		
						addAttribute(techStorageAssetId,string2Uuid(databaseDataIngestionStrategyAttrTypeId),dataIngestionStrategy)
					}
		
					if(execution.getVariable("fetchSize") != "" && fetchSize != null) {
		
						addAttribute(techStorageAssetId,string2Uuid(fetchSizeAttrTypeId),fetchSize.toDouble())
					}
		
					if(execution.getVariable("authenticationType") != "") {
		
						addAttribute(techStorageAssetId,string2Uuid(authenticationTypeAttrTypeId),authenticationType)
					}
		
					if(execution.getVariable("userId") != "" && !userId.trim().isEmpty()) {
		
						addAttribute(techStorageAssetId,string2Uuid(userIdAttrTypeId),userId.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("userIdPasswordVaultKey") != "" && !userIdPasswordVaultKey.trim().isEmpty()) {
		
						addAttribute(techStorageAssetId,string2Uuid(userIdPasswordAttrTypeId),userIdPasswordVaultKey.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderClass") != "" && !customReaderClass.trim().isEmpty()) {
		
						addAttribute(techStorageAssetId,string2Uuid(customReaderClassAttrTypeId),customReaderClass.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderParameter") != "" && !customReaderParameter.trim().isEmpty()) {
		
						addAttribute(techStorageAssetId,string2Uuid(customReaderParamsAttrTypeId),customReaderParameter.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("resourceParameters") != "" && !resourceParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(resourceParametersAttrTypeId),resourceParameters.trim().replaceAll("\\s+", " ") )
					}
		
					if(execution.getVariable("databaseDataRetrievalPartition") != "" && !databaseDataRetrievalPartition.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(databaseDataRetrivalPartitionAttrTypeId),databaseDataRetrievalPartition.trim().replaceAll("\\s+", " ") )
					}
		
					if(execution.getVariable("databaseDataRetrievalQueryParameters") != "" && !databaseDataRetrievalQueryParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId, string2Uuid(databaseDataRetrievalQueryParametersAttrTypeId),databaseDataRetrievalQueryParameters.trim().replaceAll("\\s+", " ") )
					}
		
				}
		
		
				// If the Storage Platorm is HDFS
				else if(storageLastName == 'HDFS') {
		
					accessibleThroughRelTypeId = accessibleThroughHDFSRelTypeId
		
					techFullName = cloneDataOfferingFullName+"_"+storageLastName
					loggerApi.info('techName--->'+techFullName)
		
		
					techStorageAsset = addAsset(techFullName,string2Uuid(hdfsAssetTypeId),name1,storagePlatformDomain.get(0).getId(),string2Uuid(candidateStatusTypeId))
					techStorageAssetId = techStorageAsset.getId()
		
					def storageResourceURITrim = storageResourceURI.trim().replaceAll("\\s+", " ")
		
					addAttribute(techStorageAssetId,string2Uuid(storageResourceURIAttrTypeId),storageResourceURITrim)
					addAttribute(techStorageAssetId,string2Uuid(storageFormatAttrTypeId),storageFormat)
		
					if(execution.getVariable("storageCompression") != "") {
						addAttribute(techStorageAssetId,string2Uuid(storageCompressionAttrTypeId),storageCompression)
					}
		
					if(execution.getVariable("hadoopConfigLocation") != "" && !hadoopConfigLocation.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(hadoopConfigLocAttrTypeId),hadoopConfigLocation.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("authenticationType") != "") {
						addAttribute(techStorageAssetId,string2Uuid(authenticationTypeAttrTypeId),authenticationType)
					}
		
					if(execution.getVariable("userId") != "" && !userId.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdAttrTypeId),userId.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("userIdPasswordVaultKey") != "" && !userIdPasswordVaultKey.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdPasswordAttrTypeId),userIdPasswordVaultKey.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderClass") != "" && !customReaderClass.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderClassAttrTypeId),customReaderClass.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderParameter") != "" && !customReaderParameter.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderParamsAttrTypeId),customReaderParameter.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("resourceParameters") != ""&& !resourceParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(resourceParametersAttrTypeId),resourceParameters.trim().replaceAll("\\s+", " ") )
					}
				}
		
				// If the Storage Platorm is S3
				else if(storageLastName == 'S3') {
		
					accessibleThroughRelTypeId = accessibleThroughS3RelTypeId
		
					techFullName = cloneDataOfferingFullName+"_"+storageLastName
					loggerApi.info('techName--->'+techFullName)
		
					techStorageAsset = addAsset(techFullName,string2Uuid(s3AssetTypeId),name1,storagePlatformDomain.get(0).getId(),string2Uuid(candidateStatusTypeId))
					techStorageAssetId = techStorageAsset.getId()
		
					addAttribute(techStorageAssetId,string2Uuid(storageResourceURIAttrTypeId),storageResourceURI.trim().replaceAll("\\s+", " "))
					addAttribute(techStorageAssetId,string2Uuid(storageFormatAttrTypeId),storageFormat)
		
					if(execution.getVariable("storageCompression") != "") {
						addAttribute(techStorageAssetId,string2Uuid(storageCompressionAttrTypeId),storageCompression)
					}
		
					if(execution.getVariable("awsAccountIdentifier") != "" && !awsAccountIdentifier.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(awsAccountIdentifierAttrTypeId),awsAccountIdentifier.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("kmsARN") != "" && !kmsARN.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(kmsARNAttrTypeId),kmsARN.trim().replaceAll("\\s+", " "))
					}
		
					addAttribute(techStorageAssetId,string2Uuid(bucketARNAttrTypeId),bucketARN.trim().replaceAll("\\s+", " "))
		
					if(execution.getVariable("bucketPrefix") != "" && !bucketPrefix.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(bucketPrefixAttrTypeId),bucketPrefix.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("bucketName") != "" && !bucketName.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(bucketNameAttrTypeId),bucketName.trim().replaceAll("\\s+", " "))
					}
		
					addAttribute(techStorageAssetId,string2Uuid(awsRegionAttrTypeId),awsRegion.trim().replaceAll("\\s+", " "))
		
					if(execution.getVariable("authenticationType") != "") {
						addAttribute(techStorageAssetId,string2Uuid(authenticationTypeAttrTypeId),authenticationType)
					}
		
					if(execution.getVariable("userId") != "" && !userId.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdAttrTypeId),userId.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("userIdPasswordVaultKey") != "" && !userIdPasswordVaultKey.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdPasswordAttrTypeId),userIdPasswordVaultKey.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("awsDefaultProfile") != "" && !awsDefaultProfile.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(awsDefaultProfileAttrTypeId),awsDefaultProfile.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderClass") != "" && !customReaderClass.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderClassAttrTypeId),customReaderClass.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderParameter") != "" && !customReaderParameter.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderParamsAttrTypeId),customReaderParameter.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("resourceParameters") != ""&& !resourceParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(resourceParametersAttrTypeId),resourceParameters.trim().replaceAll("\\s+", " ") )
					}
				}
		
				// If the Storage Platorm is IMPALA
				else if(storageLastName == 'IMPALA') {
		
					accessibleThroughRelTypeId = accessibleThroughImpalaRelTypeId
		
		
					techFullName = cloneDataOfferingFullName+"_"+storageLastName
					loggerApi.info('techName--->'+techFullName)
		
		
					techStorageAsset = addAsset(techFullName,string2Uuid(impalaAssetTypeId),name1,storagePlatformDomain.get(0).getId(),string2Uuid(candidateStatusTypeId))
					techStorageAssetId = techStorageAsset.getId()
		
					def storageResourceURITrim = storageResourceURI.trim().replaceAll("\\s+", " ")
		
					addAttribute(techStorageAssetId,string2Uuid(storageResourceURIAttrTypeId),storageResourceURITrim)
					addAttribute(techStorageAssetId,string2Uuid(storageFormatAttrTypeId),storageFormat)
		
					if(execution.getVariable("storageCompression") != "") {
						addAttribute(techStorageAssetId,string2Uuid(storageCompressionAttrTypeId),storageCompression)
					}
		
					if(execution.getVariable("impalaConfigLocation") != "" && !impalaConfigLocation.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(impalaConfigLocAttrTypeId),impalaConfigLocation.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("authenticationType") != "") {
						addAttribute(techStorageAssetId,string2Uuid(authenticationTypeAttrTypeId),authenticationType)
					}
		
					if(execution.getVariable("userId") != "" && !userId.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdAttrTypeId),userId.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("userIdPasswordVaultKey") != "" && !userIdPasswordVaultKey.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(userIdPasswordAttrTypeId),userIdPasswordVaultKey.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderClass") != "" && !customReaderClass.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderClassAttrTypeId),customReaderClass.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("customReaderParameter") != "" && !customReaderParameter.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(customReaderParamsAttrTypeId),customReaderParameter.trim().replaceAll("\\s+", " "))
					}
		
					if(execution.getVariable("resourceParameters") != ""&& !resourceParameters.trim().isEmpty()) {
						addAttribute(techStorageAssetId,string2Uuid(resourceParametersAttrTypeId),resourceParameters.trim().replaceAll("\\s+", " ") )
					}
				}
		
				addRelation(string2Uuid(dataOfferingAssetId),techStorageAssetId, string2Uuid(accessibleThroughRelTypeId) )
			}
		
			execution.setVariable('isError',isError)
		
		
		}
		
		catch(Exception ex) {
			isError = true
			errorMessage = ex.getMessage()
			execution.setVariable('isError',isError)
			execution.setVariable('errorMessage',errorMessage)
		}
		
		
		
		]]></script>
    </scriptTask>
    <sequenceFlow id="flow41" sourceRef="exclusivegateway9" targetRef="scripttask10">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${storageExists == false}]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="exclusivegateway10" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow42" sourceRef="scripttask10" targetRef="exclusivegateway10"></sequenceFlow>
    <endEvent id="endevent5" name="End"></endEvent>
    <sequenceFlow id="flow43" sourceRef="exclusivegateway10" targetRef="endevent5">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${isError==false}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow44" sourceRef="usertask10" targetRef="endevent5"></sequenceFlow>
    <userTask id="usertask11" name="User Task" activiti:candidateUsers="user(${startUser})">
      <documentation>Check below error, for more information, check databook console -&gt; Data Governance Centre Node -&gt; Logs -&gt; dgc.log file  &lt;br&gt;&lt;br&gt; ${errorMessage}</documentation>
    </userTask>
    <sequenceFlow id="flow45" sourceRef="exclusivegateway10" targetRef="usertask11">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${isError==true}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow46" sourceRef="usertask11" targetRef="endevent5"></sequenceFlow>
    <sequenceFlow id="flow47" sourceRef="scripttask5" targetRef="exclusivegateway6"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway11" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow50" sourceRef="scripttask2" targetRef="exclusivegateway11"></sequenceFlow>
    <scriptTask id="scripttask11" name="Validations" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script><![CDATA[import com.collibra.dgc.core.api.dto.MatchMode
import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.dto.instance.domain.FindDomainsRequest
import com.collibra.dgc.core.api.dto.instance.relation.FindRelationsRequest
import com.collibra.dgc.core.api.component.meta.AttributeTypeApi



def publicationModeValuesMap = [:]

def publicationModeAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(publicationModeAttrId)).getAllowedValues()

for(publicationModeAllowedValue in publicationModeAllowedValues) {
publicationModeValuesMap.put(publicationModeAllowedValue, publicationModeAllowedValue)
}

def storagePlatformValuesMap = [:]

def storagePlatformAllowedValues = attributeTypeApi.getAttributeType(string2Uuid(storagePlatformAttrTypeId)).getAllowedValues()

for(storagePlatformAllowedValue in storagePlatformAllowedValues) {
loggerApi.info("storagePlatformAllowedValue ===========>"+storagePlatformAllowedValue)
if(storagePlatformAllowedValue!="KAFKA") {
storagePlatformValuesMap.put(storagePlatformAllowedValue, storagePlatformAllowedValue)

}
}
execution.setVariable('publicationModeValuesMap',publicationModeValuesMap)
execution.setVariable('storagePlatformValuesMap',storagePlatformValuesMap)


/*Reusable functions*/

def findAttributes(){
def attrs = attributeApi.findAttributes(
FindAttributesRequest.builder()
.assetId(string2Uuid(item.id))
.limit(50)
.offset(0)
.build()
).getResults();

return attrs;
}


/*-------------------------------------------------Actual code--------------------------------------------------*/

def attrList = [:]

def attrs = findAttributes();

def validationMsg = ""

for(type in attrs){
loggerApi.info(type.getType().getName().toString());
if(type.getValue() != "") {
loggerApi.info(type.getValue().toString());
attrList.put(type.getType().getName().toString().replace(" ","").replace("-", ""),type.getValue().toString().replace(".0", "").replaceAll("<[^>]*>", ""));
}
else {
attrList.put(type.getType().getName().toString().replace(" ","").replace("-", ""), null)
}
}

loggerApi.info('attrList---->'+attrList)
execution.setVariable('attrList',attrList)



def targetDataSets = []
def dataSetRel = relationApi.findRelations(
FindRelationsRequest.builder()
.relationTypeId(string2Uuid(dataSetContainsDataOfferingRelTypeId))
.targetId(string2Uuid(item.id))
.build()
).getResults()

loggerApi.info('dataSetRel--->'+dataSetRel)

if(!dataSetRel.isEmpty()) {
for(eachDataSet in dataSetRel) {
targetDataSets.add(eachDataSet.getSource().getId())
}
}

loggerApi.info('targetDataSets--->'+targetDataSets)

execution.setVariable('targetDataSets',targetDataSets)




//Finding the value of EPS Producer Attribute from the Data Set
def typeIds = []
typeIds.add(string2Uuid(epsProducerNameAttrTypeId))
def epsProducerId

if(!targetDataSets.isEmpty())
{
for(eachDataSet in targetDataSets)
{
def epsproducerAttr = attributeApi.findAttributes(
FindAttributesRequest.builder()
.typeIds(typeIds)
.assetId(eachDataSet)
.build()
).getResults()

def epsProducerName = epsproducerAttr.get(0).getValue()
loggerApi.info('epsProducerName'+epsProducerName)

def epsProducerAsset = assetApi.findAssets(
FindAssetsRequest.builder()
.name(epsProducerName)
.nameMatchMode(MatchMode.EXACT)
.domainId(string2Uuid(epsProducerDomainId))
.build()
).getResults()

epsProducerId = epsProducerAsset.get(0).getId()
}
}
execution.setVariable('epsProducerId',epsProducerId)


// Getting Assets from SLA Arrival Time Domain

def typeIds1 = []
typeIds1.add(string2Uuid(codeValueTypeId)) //data set type id

def listSLAArrivalTime= assetApi.findAssets(
FindAssetsRequest.builder()
.typeIds(typeIds1)
.domainId(string2Uuid(slaArrivalTimeDomainId)) // EPS domain id
.build()
).getResults();
loggerApi.info('listSLAArrivalTime--->'+listSLAArrivalTime)
def slaArrivalTimeList = []
def slaArrivalTimeMap = [:]
for(eachSLATime in listSLAArrivalTime) {
slaArrivalTimeList.add(eachSLATime.getId())
slaArrivalTimeMap.put(uuid2String(eachSLATime.getId()), eachSLATime.getName())

}
execution.setVariable('slaArrivalTimeList',slaArrivalTimeList)


def typeIds3 = []
typeIds3.add(string2Uuid(slaArrivalTimeAttrId))
//def slaArrivalTimeMap = [:]

def slaArrivalTimeAttr = attributeApi.findAttributes(
FindAttributesRequest.builder()
.typeIds(typeIds3)
.assetId(string2Uuid(item.id))
.build()
).getResults()

def slaArrivalTimeValue = ""
if(!slaArrivalTimeAttr.isEmpty()) {
slaArrivalTimeValue = slaArrivalTimeAttr.get(0).getValue()
}

loggerApi.info('slaArrivalTimeValue'+slaArrivalTimeValue)

def slaArrivalTimeId
def slaArrivalTimeAsset = assetApi.findAssets(
FindAssetsRequest.builder()
.name(slaArrivalTimeValue)
.nameMatchMode(MatchMode.EXACT)
.domainId(string2Uuid(slaArrivalTimeDomainId))
.build()
).getResults()



if(!slaArrivalTimeAsset.isEmpty()) {

slaArrivalTimeId = slaArrivalTimeAsset.get(0).getId()
//slaArrivalTimeMap.put(uuid2String(slaArrivalTimeAsset.get(0).getId()), slaArrivalTimeAsset.get(0).getName())

}


execution.setVariable('slaArrivalTimeId',slaArrivalTimeId)



// Getting Assets from SLA Offset Days Domain


def listSLAOffsetDays= assetApi.findAssets(
FindAssetsRequest.builder()
.typeIds(typeIds1)
.domainId(string2Uuid(slaOffsetDaysDomainId)) // EPS domain id
.build()
).getResults();
loggerApi.info('listSLAOffsetDays--->'+listSLAOffsetDays)
def slaOffsetDaysList = []
def slaOffsetDaysMap = [:]
for(eachSLADays in listSLAOffsetDays) {
slaOffsetDaysList.add(eachSLADays.getId())
slaOffsetDaysMap.put(uuid2String(eachSLADays.getId()), eachSLADays.getName())

}
execution.setVariable('slaOffsetDaysList',slaOffsetDaysList)



def typeIds2 = []
typeIds2.add(string2Uuid(slaOffsetDaysAttrId))

def slaOffsetDaysAttr = attributeApi.findAttributes(
FindAttributesRequest.builder()
.typeIds(typeIds2)
.assetId(string2Uuid(item.id))
.build()
).getResults()
loggerApi.info('slaOffsetDaysAttr'+slaOffsetDaysAttr)


//def slaOffsetDaysMap = [:]
def slaOffsetDaysValue = ""
if(!slaOffsetDaysAttr.isEmpty()) {
slaOffsetDaysValue = slaOffsetDaysAttr.get(0).getValue()
loggerApi.info('slaOffsetDaysValue'+slaOffsetDaysValue.toString())
}


String SLA = slaOffsetDaysValue
SLA = SLA.replace(".0","")
loggerApi.info('SLA'+SLA)
def slaOffsetDaysId
def slaOffsetDaysAsset = assetApi.findAssets(
FindAssetsRequest.builder()
.name(SLA)
.nameMatchMode(MatchMode.EXACT)
.domainId(string2Uuid(slaOffsetDaysDomainId))
.build()
).getResults()

if(!slaOffsetDaysAsset.isEmpty()) {
slaOffsetDaysId = slaOffsetDaysAsset.get(0).getId()
//slaOffsetDaysMap.put(uuid2String(slaOffsetDaysAsset.get(0).getId()), slaOffsetDaysAsset.get(0).getName())
}



execution.setVariable('slaOffsetDaysId',slaOffsetDaysId)






// Getting Assets from SLA Calendar Domain

def listSLACalendar= assetApi.findAssets(
FindAssetsRequest.builder()
.typeIds(typeIds1)
.domainId(string2Uuid(slaCalendarDomainId)) // EPS domain id
.build()
).getResults()
loggerApi.info('listSLACalendar--->'+listSLACalendar)
def slaCalendarList = []
def slaCalendarMap = [:]
for(eachCalendar in listSLACalendar) {
slaCalendarList.add(eachCalendar.getId())
slaCalendarMap.put(uuid2String(eachCalendar.getId()), eachCalendar.getName())

}
execution.setVariable('slaCalendarList',slaCalendarList)


def typeIds4 = []
typeIds4.add(string2Uuid(slaCalenderAttrId))
//def slaCalendarMap = [:]

def slaCalendarAttr = attributeApi.findAttributes(
FindAttributesRequest.builder()
.typeIds(typeIds4)
.assetId(string2Uuid(item.id))
.build()
).getResults()

loggerApi.info('slaCalendarAttr'+slaCalendarAttr)
def slaCalendarId
if(!slaCalendarAttr.isEmpty())
{
def slaCalendarValue = slaCalendarAttr.get(0).getValue()
loggerApi.info('slaCalendarValue'+slaCalendarValue)

def slaCalendarAsset = assetApi.findAssets(
FindAssetsRequest.builder()
.name(slaCalendarValue.toString())
.nameMatchMode(MatchMode.EXACT)
.domainId(string2Uuid(slaCalendarDomainId))
.build()
).getResults()

slaCalendarId = slaCalendarAsset.get(0).getId()
//slaCalendarMap.put(uuid2String(slaCalendarAsset.get(0).getId()), slaCalendarAsset.get(0).getName())
}
else
{
slaCalendarId = null
}

execution.setVariable('slaCalendarId',slaCalendarId)



def relationLists = []

def milestonRelation = relationApi.findRelations(
FindRelationsRequest.builder()
.sourceId(string2Uuid(item.id))
.relationTypeId(string2Uuid(dataOfferingMilestoneByMilestoneFieldRelTypeId))
.build()
).getResults()
if(!milestonRelation.isEmpty()) {
for(relation in milestonRelation)
{
relationLists.add(relation.getTarget().getId())
}
}
else {
relationLists.add(null)
}

loggerApi.info('relationLists--->'+relationLists)
execution.setVariable('relationLists',relationLists)


def schemaList = []
for(dataset in targetDataSets) {
def schemaRelation = relationApi.findRelations(
FindRelationsRequest.builder()
.sourceId(dataset)
.relationTypeId(string2Uuid(dataSetContainsSchemaRelTypeId))
.build()
).getResults()
for(schemaRel in schemaRelation) {
schemaList.add(schemaRel.getTarget().getId())
}
}
loggerApi.info('schemaList--->'+schemaList)

def schemaStatus
def notDescopedSchemas = []
for(eachSchema in schemaList)
{
schemaStatus = assetApi.getAsset(eachSchema).getStatus().getName()
loggerApi.info('schemaStatus--->'+schemaStatus)


if(schemaStatus != 'Descoped')
{
notDescopedSchemas.add(eachSchema)
}
else
{
notDescopedSchemas.add(null)
}
}

loggerApi.info('notDescopedSchemas--->'+notDescopedSchemas)

execution.setVariable('notDescopedSchemas',notDescopedSchemas)

// ---------------------------Finding Tables and columns of schemas

def tableAssets = []
def columnAssets = []
def tableExist = true
def columnExist = true

for(schemaid in notDescopedSchemas) {
def tableRels = relationApi.findRelations(
FindRelationsRequest.builder()
.sourceId(schemaid)
.relationTypeId(string2Uuid(schemaContainsTableRelTypeId))
.build()
).getResults()

//loggerApi.info('tableRel----->'+tableRels.get(0).getTarget().getId())

loggerApi.info("tableRels ==============>"+tableRels)
for(tableRel in tableRels)
{
def targetId = tableRel.getTarget().getId()
tableAssets.add(uuid2String(targetId))
loggerApi.info("targetId ==============>"+targetId)
loggerApi.info("tableAssets ==============>"+tableAssets)

def columnRels = relationApi.findRelations(
FindRelationsRequest.builder()
.targetId(targetId)
.relationTypeId(string2Uuid(tableContainsColumnRelTypeId))
.build()
).getResults()
loggerApi.info("columnRels ==============>"+columnRels)

for(columnRel in columnRels) {
def targetId1 = columnRel.getSource().getId()
columnAssets.add(uuid2String(targetId1))
loggerApi.info("targetId1 ==============>"+targetId1)
//loggerApi.info(" ==============>"+)
}

}

}
loggerApi.info("tableAssets ==============>"+tableAssets)
loggerApi.info("columnAssets ==============>"+columnAssets)
/*
* if(tableAssets.isEmpty()) { tableExist = false validationMsg =
"<br><b><font color='red'> There is no table exists</font></b></br>" }
*
* if(columnAssets.isEmpty()) { columnExist = false validationMsg =
"<br><b><font color='red'> There is no column exists</font></b></br>" }
*/


def dataOfferingSchemas = relationApi.findRelations(
FindRelationsRequest.builder()
.sourceId(string2Uuid(item.id))
.relationTypeId(string2Uuid(dataOfferingGroupsSchemaRelTypeId))
.build()
).getResults()

def dataOfferingSchemasTargets = []
for(dataOfferingSchema in dataOfferingSchemas) {
dataOfferingSchemasTargets .add(dataOfferingSchema.getTarget().getId())

}

loggerApi.info("dataOfferingSchemasTargets ==========> "+dataOfferingSchemasTargets)

execution.setVariable('dataOfferingSchemasTargets',dataOfferingSchemasTargets)

def storageTarget = []
def storageRelIds = [accessibleThroughFileRelTypeId, accessibleThroughDatabaseRelTypeId, accessibleThroughHDFSRelTypeId, accessibleThroughS3RelTypeId, accessibleThroughImpalaRelTypeId]
def storageRel
def storageName
String storageLastName
def techstorageName
def storageAttrList = [:]
def storageId
//finding Storage Platform Assets from Data Offering Relation

for(i = 0; i <storageRelIds.size(); i++)
{
storageRel = relationApi.findRelations(
FindRelationsRequest.builder()
.sourceId(string2Uuid(item.id))
.relationTypeId(string2Uuid(storageRelIds[i]))
.build()
).getResults()


if(!storageRel.isEmpty())
{
for(eachstorage in storageRel)
{
storageTarget.add(eachstorage.getTarget().getId())
}
//storageTarget.add(storageRel.get(0).getTarget().getId())

}
/*
* else { storageTarget.add(null) }
*/
}

def domainNameStorage = assetApi.getAsset(doId).getDomain().getName()

def domainSplit = domainNameStorage.split(" - ");

loggerApi.info('findAttr ----&gt;'+domainSplit)

def storageDomainId = domainApi.findDomains(FindDomainsRequest.builder()
.name(domainSplit[0].trim() +' - Storage Platforms')
.nameMatchMode(MatchMode.EXACT)
.typeId(string2Uuid(storageDomainTypeId))
.communityId(doCommunityId)
.build()
).getResults()

loggerApi.info('findAttr ----&gt;'+storageDomainId)
execution.setVariable('storageDomain',uuid2String(storageDomainId.get(0).getId()))
execution.setVariable('redirectUrl',applicationApi.getInfo().getBaseUrl()+"domain/"+uuid2String(storageDomainId.get(0).getId()))


loggerApi.info("storageTarget ============> "+storageTarget)
execution.setVariable('storageLastName',storageLastName)
execution.setVariable('storageId',storageId)
execution.setVariable('storageName',storageName)
execution.setVariable('storageTarget',storageTarget)
execution.setVariable('validationMsg',validationMsg)
execution.setVariable('tableAssets',tableAssets)
execution.setVariable('columnAssets',columnAssets)

execution.setVariable('slaOffsetDaysMap',slaOffsetDaysMap)
execution.setVariable('slaArrivalTimeMap',slaArrivalTimeMap)
execution.setVariable('slaCalendarMap',slaCalendarMap)]]></script>
    </scriptTask>
    <sequenceFlow id="flow51" sourceRef="exclusivegateway11" targetRef="scripttask11">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${dataOfferingFound == false}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="usertask12" name="Offering already exists for Execution Platform ${instanceNameValuesMap.get(instanceName)}. Do you want to select another Execution Platform" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="yes" name="Yes" type="button" default="false"></activiti:formProperty>
        <activiti:formProperty id="no" name="No" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow52" sourceRef="exclusivegateway11" targetRef="usertask12">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${dataOfferingFound == true}]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="exclusivegateway12" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow53" sourceRef="usertask12" targetRef="exclusivegateway12"></sequenceFlow>
    <sequenceFlow id="flow54" sourceRef="exclusivegateway12" targetRef="endevent2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${no}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow55" sourceRef="exclusivegateway12" targetRef="usertask2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${yes}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow56" sourceRef="scripttask11" targetRef="usertask4"></sequenceFlow>
    <serviceTask id="servicetask1" name="Service Task" activiti:class="com.collibra.dgc.core.workflow.activiti.delegate.StartWorkflowInstanceDelegate">
      <extensionElements>
        <activiti:field name="resourceId">
          <activiti:expression><![CDATA[${storageDomain}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="resourceType">
          <activiti:string><![CDATA[VC]]></activiti:string>
        </activiti:field>
        <activiti:field name="processId">
          <activiti:string><![CDATA[dsrtechstoragetemplateprocess]]></activiti:string>
        </activiti:field>
        <activiti:field name="propertyKeyList">
          <activiti:string><![CDATA[fromWorkflow,currentOfferingName,storagePlatformType,storagePlatform]]></activiti:string>
        </activiti:field>
        <activiti:field name="propertyValueList">
          <activiti:expression><![CDATA[${'true'},${doId},${'true'},${alternateStoragePlatform}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow58" sourceRef="parallelgateway1" targetRef="servicetask1"></sequenceFlow>
    <parallelGateway id="parallelgateway1" name="Parallel Gateway"></parallelGateway>
    <sequenceFlow id="flow59" sourceRef="exclusivegateway3" targetRef="parallelgateway1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${createStorage}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow60" sourceRef="exclusivegateway3" targetRef="scripttask4">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${submit}]]></conditionExpression>
    </sequenceFlow>
    <endEvent id="endevent7" name="End"></endEvent>
    <serviceTask id="servicetask2" name="Service Task" activiti:class="com.collibra.dgc.core.workflow.activiti.delegate.StartWorkflowInstanceDelegate">
      <extensionElements>
        <activiti:field name="resourceId">
          <activiti:expression><![CDATA[${uuid2String(doId)}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="resourceType">
          <activiti:string><![CDATA[TE]]></activiti:string>
        </activiti:field>
        <activiti:field name="processId">
          <activiti:string><![CDATA[dsrlinkcolumntodataofferingprocess]]></activiti:string>
        </activiti:field>
        <activiti:field name="propertyKeyList">
          <activiti:string><![CDATA[fromWorkflow,selectAllTablesAndColumns,selectedSchemaList,storagePlatformType,storagePlatform]]></activiti:string>
        </activiti:field>
        <activiti:field name="propertyValueList">
          <activiti:expression><![CDATA[${'true'},${selectAllTablesAndColumns},${selectedSchemaToList},${'true'},${storagePlatform}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow63" sourceRef="exclusivegateway4" targetRef="servicetask2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${selectAllTablesAndColumns == "No"}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow64" sourceRef="servicetask1" targetRef="endevent7"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_Collaboration">
    <bpmndi:BPMNPlane bpmnElement="Collaboration" id="BPMNPlane_Collaboration">
      <bpmndi:BPMNShape bpmnElement="create_branch" id="BPMNShape_create_branch">
        <omgdc:Bounds height="641.0" width="2211.0" x="60.0" y="40.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="lane1" id="BPMNShape_lane1">
        <omgdc:Bounds height="641.0" width="2191.0" x="80.0" y="40.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startevent1" id="BPMNShape_startevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="120.0" y="100.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask1" id="BPMNShape_scripttask1">
        <omgdc:Bounds height="55.0" width="105.0" x="200.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway1" id="BPMNShape_exclusivegateway1">
        <omgdc:Bounds height="40.0" width="40.0" x="350.0" y="98.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask1" id="BPMNShape_usertask1">
        <omgdc:Bounds height="55.0" width="105.0" x="318.0" y="207.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask2" id="BPMNShape_usertask2">
        <omgdc:Bounds height="73.0" width="105.0" x="440.0" y="82.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask2" id="BPMNShape_scripttask2">
        <omgdc:Bounds height="60.0" width="110.0" x="600.0" y="88.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="353.0" y="300.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask4" id="BPMNShape_usertask4">
        <omgdc:Bounds height="55.0" width="105.0" x="970.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway3" id="BPMNShape_exclusivegateway3">
        <omgdc:Bounds height="40.0" width="40.0" x="1002.0" y="207.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent2" id="BPMNShape_endevent2">
        <omgdc:Bounds height="35.0" width="35.0" x="920.0" y="210.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask4" id="BPMNShape_scripttask4">
        <omgdc:Bounds height="55.0" width="105.0" x="1170.0" y="293.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway4" id="BPMNShape_exclusivegateway4">
        <omgdc:Bounds height="40.0" width="40.0" x="1322.0" y="300.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask5" id="BPMNShape_scripttask5">
        <omgdc:Bounds height="55.0" width="105.0" x="1290.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway6" id="BPMNShape_exclusivegateway6">
        <omgdc:Bounds height="40.0" width="40.0" x="1480.0" y="100.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask5" id="BPMNShape_usertask5">
        <omgdc:Bounds height="55.0" width="105.0" x="1448.0" y="180.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask6" id="BPMNShape_usertask6">
        <omgdc:Bounds height="55.0" width="105.0" x="1590.0" y="180.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask7" id="BPMNShape_usertask7">
        <omgdc:Bounds height="55.0" width="105.0" x="1740.0" y="180.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask8" id="BPMNShape_usertask8">
        <omgdc:Bounds height="55.0" width="105.0" x="1880.0" y="180.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask9" id="BPMNShape_usertask9">
        <omgdc:Bounds height="55.0" width="105.0" x="2010.0" y="180.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask7" id="BPMNShape_scripttask7">
        <omgdc:Bounds height="55.0" width="105.0" x="1590.0" y="290.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway7" id="BPMNShape_exclusivegateway7">
        <omgdc:Bounds height="40.0" width="40.0" x="1622.0" y="390.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask8" id="BPMNShape_scripttask8">
        <omgdc:Bounds height="55.0" width="105.0" x="1350.0" y="490.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask9" id="BPMNShape_scripttask9">
        <omgdc:Bounds height="55.0" width="105.0" x="1880.0" y="290.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway8" id="BPMNShape_exclusivegateway8">
        <omgdc:Bounds height="40.0" width="40.0" x="1912.0" y="390.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway9" id="BPMNShape_exclusivegateway9">
        <omgdc:Bounds height="40.0" width="40.0" x="1218.0" y="497.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask10" id="BPMNShape_usertask10">
        <omgdc:Bounds height="55.0" width="105.0" x="1186.0" y="590.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask10" id="BPMNShape_scripttask10">
        <omgdc:Bounds height="71.0" width="151.0" x="990.0" y="482.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway10" id="BPMNShape_exclusivegateway10">
        <omgdc:Bounds height="40.0" width="40.0" x="890.0" y="497.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent5" id="BPMNShape_endevent5">
        <omgdc:Bounds height="35.0" width="35.0" x="893.0" y="600.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask11" id="BPMNShape_usertask11">
        <omgdc:Bounds height="55.0" width="105.0" x="610.0" y="490.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway11" id="BPMNShape_exclusivegateway11">
        <omgdc:Bounds height="40.0" width="40.0" x="755.0" y="99.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask11" id="BPMNShape_scripttask11">
        <omgdc:Bounds height="55.0" width="105.0" x="840.0" y="92.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask12" id="BPMNShape_usertask12">
        <omgdc:Bounds height="55.0" width="105.0" x="723.0" y="200.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway12" id="BPMNShape_exclusivegateway12">
        <omgdc:Bounds height="40.0" width="40.0" x="755.0" y="297.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="servicetask1" id="BPMNShape_servicetask1">
        <omgdc:Bounds height="55.0" width="105.0" x="970.0" y="376.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="parallelgateway1" id="BPMNShape_parallelgateway1">
        <omgdc:Bounds height="40.0" width="40.0" x="1002.0" y="300.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent7" id="BPMNShape_endevent7">
        <omgdc:Bounds height="35.0" width="35.0" x="1140.0" y="386.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="servicetask2" id="BPMNShape_servicetask2">
        <omgdc:Bounds height="55.0" width="105.0" x="1290.0" y="376.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="155.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="200.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="305.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="350.0" y="118.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow3" id="BPMNEdge_flow3">
        <omgdi:waypoint x="370.0" y="138.0"></omgdi:waypoint>
        <omgdi:waypoint x="370.0" y="207.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow4" id="BPMNEdge_flow4">
        <omgdi:waypoint x="390.0" y="118.0"></omgdi:waypoint>
        <omgdi:waypoint x="440.0" y="118.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow5" id="BPMNEdge_flow5">
        <omgdi:waypoint x="545.0" y="118.0"></omgdi:waypoint>
        <omgdi:waypoint x="600.0" y="118.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow6" id="BPMNEdge_flow6">
        <omgdi:waypoint x="370.0" y="262.0"></omgdi:waypoint>
        <omgdi:waypoint x="370.0" y="300.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow11" id="BPMNEdge_flow11">
        <omgdi:waypoint x="1022.0" y="145.0"></omgdi:waypoint>
        <omgdi:waypoint x="1022.0" y="207.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow12" id="BPMNEdge_flow12">
        <omgdi:waypoint x="1002.0" y="227.0"></omgdi:waypoint>
        <omgdi:waypoint x="955.0" y="227.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow13" id="BPMNEdge_flow13">
        <omgdi:waypoint x="1042.0" y="320.0"></omgdi:waypoint>
        <omgdi:waypoint x="1170.0" y="320.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow14" id="BPMNEdge_flow14">
        <omgdi:waypoint x="1275.0" y="320.0"></omgdi:waypoint>
        <omgdi:waypoint x="1322.0" y="320.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow15" id="BPMNEdge_flow15">
        <omgdi:waypoint x="1322.0" y="320.0"></omgdi:waypoint>
        <omgdi:waypoint x="1281.0" y="319.0"></omgdi:waypoint>
        <omgdi:waypoint x="1281.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="1075.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow16" id="BPMNEdge_flow16">
        <omgdi:waypoint x="1342.0" y="300.0"></omgdi:waypoint>
        <omgdi:waypoint x="1342.0" y="145.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow23" id="BPMNEdge_flow23">
        <omgdi:waypoint x="1500.0" y="140.0"></omgdi:waypoint>
        <omgdi:waypoint x="1500.0" y="180.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow24" id="BPMNEdge_flow24">
        <omgdi:waypoint x="1520.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1642.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1642.0" y="180.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow25" id="BPMNEdge_flow25">
        <omgdi:waypoint x="1520.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1792.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1792.0" y="180.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow26" id="BPMNEdge_flow26">
        <omgdi:waypoint x="1520.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1932.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="1932.0" y="180.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow27" id="BPMNEdge_flow27">
        <omgdi:waypoint x="1520.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="2062.0" y="120.0"></omgdi:waypoint>
        <omgdi:waypoint x="2062.0" y="180.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow28" id="BPMNEdge_flow28">
        <omgdi:waypoint x="1642.0" y="235.0"></omgdi:waypoint>
        <omgdi:waypoint x="1642.0" y="290.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow29" id="BPMNEdge_flow29">
        <omgdi:waypoint x="1642.0" y="345.0"></omgdi:waypoint>
        <omgdi:waypoint x="1642.0" y="390.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow30" id="BPMNEdge_flow30">
        <omgdi:waypoint x="1622.0" y="410.0"></omgdi:waypoint>
        <omgdi:waypoint x="1563.0" y="410.0"></omgdi:waypoint>
        <omgdi:waypoint x="1563.0" y="206.0"></omgdi:waypoint>
        <omgdi:waypoint x="1590.0" y="207.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow31" id="BPMNEdge_flow31">
        <omgdi:waypoint x="1500.0" y="235.0"></omgdi:waypoint>
        <omgdi:waypoint x="1500.0" y="516.0"></omgdi:waypoint>
        <omgdi:waypoint x="1455.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow32" id="BPMNEdge_flow32">
        <omgdi:waypoint x="1642.0" y="430.0"></omgdi:waypoint>
        <omgdi:waypoint x="1641.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1455.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow33" id="BPMNEdge_flow33">
        <omgdi:waypoint x="1792.0" y="235.0"></omgdi:waypoint>
        <omgdi:waypoint x="1792.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1455.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow34" id="BPMNEdge_flow34">
        <omgdi:waypoint x="1932.0" y="235.0"></omgdi:waypoint>
        <omgdi:waypoint x="1932.0" y="290.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow35" id="BPMNEdge_flow35">
        <omgdi:waypoint x="1932.0" y="345.0"></omgdi:waypoint>
        <omgdi:waypoint x="1932.0" y="390.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow36" id="BPMNEdge_flow36">
        <omgdi:waypoint x="1912.0" y="410.0"></omgdi:waypoint>
        <omgdi:waypoint x="1854.0" y="410.0"></omgdi:waypoint>
        <omgdi:waypoint x="1854.0" y="204.0"></omgdi:waypoint>
        <omgdi:waypoint x="1880.0" y="207.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow37" id="BPMNEdge_flow37">
        <omgdi:waypoint x="1932.0" y="430.0"></omgdi:waypoint>
        <omgdi:waypoint x="1932.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1455.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow38" id="BPMNEdge_flow38">
        <omgdi:waypoint x="2062.0" y="235.0"></omgdi:waypoint>
        <omgdi:waypoint x="2062.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1455.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow39" id="BPMNEdge_flow39">
        <omgdi:waypoint x="1350.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1258.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow40" id="BPMNEdge_flow40">
        <omgdi:waypoint x="1238.0" y="537.0"></omgdi:waypoint>
        <omgdi:waypoint x="1238.0" y="590.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow41" id="BPMNEdge_flow41">
        <omgdi:waypoint x="1218.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="1141.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow42" id="BPMNEdge_flow42">
        <omgdi:waypoint x="990.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="930.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow43" id="BPMNEdge_flow43">
        <omgdi:waypoint x="910.0" y="537.0"></omgdi:waypoint>
        <omgdi:waypoint x="910.0" y="600.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow44" id="BPMNEdge_flow44">
        <omgdi:waypoint x="1186.0" y="617.0"></omgdi:waypoint>
        <omgdi:waypoint x="928.0" y="617.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow45" id="BPMNEdge_flow45">
        <omgdi:waypoint x="890.0" y="517.0"></omgdi:waypoint>
        <omgdi:waypoint x="715.0" y="517.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow46" id="BPMNEdge_flow46">
        <omgdi:waypoint x="662.0" y="545.0"></omgdi:waypoint>
        <omgdi:waypoint x="662.0" y="617.0"></omgdi:waypoint>
        <omgdi:waypoint x="893.0" y="617.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow47" id="BPMNEdge_flow47">
        <omgdi:waypoint x="1395.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="1480.0" y="120.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow50" id="BPMNEdge_flow50">
        <omgdi:waypoint x="710.0" y="118.0"></omgdi:waypoint>
        <omgdi:waypoint x="755.0" y="119.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow51" id="BPMNEdge_flow51">
        <omgdi:waypoint x="795.0" y="119.0"></omgdi:waypoint>
        <omgdi:waypoint x="840.0" y="119.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow52" id="BPMNEdge_flow52">
        <omgdi:waypoint x="775.0" y="139.0"></omgdi:waypoint>
        <omgdi:waypoint x="775.0" y="200.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow53" id="BPMNEdge_flow53">
        <omgdi:waypoint x="775.0" y="255.0"></omgdi:waypoint>
        <omgdi:waypoint x="775.0" y="297.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow54" id="BPMNEdge_flow54">
        <omgdi:waypoint x="795.0" y="317.0"></omgdi:waypoint>
        <omgdi:waypoint x="937.0" y="317.0"></omgdi:waypoint>
        <omgdi:waypoint x="937.0" y="245.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow55" id="BPMNEdge_flow55">
        <omgdi:waypoint x="755.0" y="317.0"></omgdi:waypoint>
        <omgdi:waypoint x="492.0" y="316.0"></omgdi:waypoint>
        <omgdi:waypoint x="492.0" y="155.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow56" id="BPMNEdge_flow56">
        <omgdi:waypoint x="945.0" y="119.0"></omgdi:waypoint>
        <omgdi:waypoint x="970.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow58" id="BPMNEdge_flow58">
        <omgdi:waypoint x="1022.0" y="340.0"></omgdi:waypoint>
        <omgdi:waypoint x="1022.0" y="376.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow59" id="BPMNEdge_flow59">
        <omgdi:waypoint x="1022.0" y="247.0"></omgdi:waypoint>
        <omgdi:waypoint x="1022.0" y="300.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow60" id="BPMNEdge_flow60">
        <omgdi:waypoint x="1042.0" y="227.0"></omgdi:waypoint>
        <omgdi:waypoint x="1222.0" y="227.0"></omgdi:waypoint>
        <omgdi:waypoint x="1222.0" y="293.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow63" id="BPMNEdge_flow63">
        <omgdi:waypoint x="1342.0" y="340.0"></omgdi:waypoint>
        <omgdi:waypoint x="1342.0" y="376.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow64" id="BPMNEdge_flow64">
        <omgdi:waypoint x="1075.0" y="403.0"></omgdi:waypoint>
        <omgdi:waypoint x="1140.0" y="403.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>